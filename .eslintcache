[{"E:\\React\\zaglushka\\src\\components\\Logo\\index.jsx":"1","E:\\React\\zaglushka\\src\\index.js":"2","E:\\React\\zaglushka\\src\\components\\Header\\index.jsx":"3","E:\\React\\zaglushka\\src\\App.jsx":"4","E:\\React\\zaglushka\\src\\redux\\store.js":"5","E:\\React\\zaglushka\\src\\redux\\reducer.js":"6","E:\\React\\zaglushka\\src\\screen\\AboutUs\\AboutUs.jsx":"7","E:\\React\\zaglushka\\src\\screen\\Home\\Home.jsx":"8","E:\\React\\zaglushka\\src\\screen\\Volunteers\\Volunteers.jsx":"9","E:\\React\\zaglushka\\src\\screen\\Login\\Login.jsx":"10","E:\\React\\zaglushka\\src\\screen\\Reg\\Reg.jsx":"11","E:\\React\\zaglushka\\src\\config\\firebase.js":"12","E:\\React\\zaglushka\\src\\helpers\\validate.js":"13","E:\\React\\zaglushka\\src\\screen\\Profile\\index.jsx":"14","E:\\React\\zaglushka\\src\\screen\\Feedback\\index.jsx":"15","E:\\React\\zaglushka\\src\\screen\\Rules\\index.jsx":"16","E:\\React\\zaglushka\\src\\components\\Footer\\index.jsx":"17","E:\\React\\zaglushka\\src\\helpers\\isFetRec.js":"18","E:\\React\\zaglushka\\src\\screen\\Volunteers\\Empty.jsx":"19","E:\\React\\zaglushka\\src\\helpers\\getAge.js":"20","E:\\React\\zaglushka\\src\\components\\CardVolunteer\\index.jsx":"21","E:\\React\\zaglushka\\src\\components\\Uploader\\index.jsx":"22","E:\\React\\zaglushka\\src\\components\\Checkbox\\index.jsx":"23","E:\\React\\zaglushka\\src\\components\\PhotoShower\\index.jsx":"24","E:\\React\\zaglushka\\src\\components\\Menu\\index.jsx":"25","E:\\React\\zaglushka\\src\\helpers\\formatDataFeedback.js":"26","E:\\React\\zaglushka\\src\\helpers\\formatFullNameFeedback copy.js":"27","E:\\React\\zaglushka\\src\\helpers\\getZero.js":"28","E:\\React\\zaglushka\\src\\screen\\AllUsers\\index.jsx":"29","E:\\React\\zaglushka\\src\\screen\\AllUsers\\Empty.jsx":"30","E:\\React\\zaglushka\\src\\screen\\AllFeedback\\index.jsx":"31","E:\\React\\zaglushka\\src\\screen\\Profile\\EditProfile\\EditProfile.jsx":"32","E:\\React\\zaglushka\\src\\screen\\Profile\\Service\\index.jsx":"33","E:\\React\\zaglushka\\src\\helpers\\parseRole.js":"34","E:\\React\\zaglushka\\src\\screen\\Querties\\index.jsx":"35","E:\\React\\zaglushka\\src\\helpers\\parseQueryStatus.js":"36","E:\\React\\zaglushka\\src\\screen\\Dialog\\index.jsx":"37","E:\\React\\zaglushka\\src\\helpers\\findUserById.js":"38","E:\\React\\zaglushka\\src\\helpers\\Avatar\\index.jsx":"39"},{"size":565,"mtime":1607788966900,"results":"40","hashOfConfig":"41"},{"size":368,"mtime":1607698796045,"results":"42","hashOfConfig":"41"},{"size":2213,"mtime":1608575917379,"results":"43","hashOfConfig":"41"},{"size":2226,"mtime":1608342998878,"results":"44","hashOfConfig":"41"},{"size":232,"mtime":1607542616377,"results":"45","hashOfConfig":"41"},{"size":20129,"mtime":1608394714381,"results":"46","hashOfConfig":"41"},{"size":4378,"mtime":1608001934772,"results":"47","hashOfConfig":"41"},{"size":3035,"mtime":1608009760996,"results":"48","hashOfConfig":"41"},{"size":4757,"mtime":1608177131628,"results":"49","hashOfConfig":"41"},{"size":2178,"mtime":1608351542439,"results":"50","hashOfConfig":"41"},{"size":7106,"mtime":1608182948954,"results":"51","hashOfConfig":"41"},{"size":468,"mtime":1608036006506,"results":"52","hashOfConfig":"41"},{"size":1219,"mtime":1607896429484,"results":"53","hashOfConfig":"41"},{"size":5756,"mtime":1608575732975,"results":"54","hashOfConfig":"41"},{"size":4678,"mtime":1608182359249,"results":"55","hashOfConfig":"41"},{"size":610,"mtime":1608001977860,"results":"56","hashOfConfig":"41"},{"size":208,"mtime":1608001401290,"results":"57","hashOfConfig":"41"},{"size":361,"mtime":1608306646514,"results":"58","hashOfConfig":"41"},{"size":450,"mtime":1607552376444,"results":"59","hashOfConfig":"41"},{"size":372,"mtime":1608010287239,"results":"60","hashOfConfig":"41"},{"size":1116,"mtime":1608576806518,"results":"61","hashOfConfig":"41"},{"size":2191,"mtime":1608002951875,"results":"62","hashOfConfig":"41"},{"size":573,"mtime":1607793780730,"results":"63","hashOfConfig":"41"},{"size":858,"mtime":1607674603370,"results":"64","hashOfConfig":"41"},{"size":1102,"mtime":1608339610413,"results":"65","hashOfConfig":"41"},{"size":631,"mtime":1608175900541,"results":"66","hashOfConfig":"41"},{"size":175,"mtime":1608175934071,"results":"67","hashOfConfig":"41"},{"size":73,"mtime":1608172695778,"results":"68","hashOfConfig":"41"},{"size":4945,"mtime":1608576497842,"results":"69","hashOfConfig":"41"},{"size":448,"mtime":1608176174268,"results":"70","hashOfConfig":"41"},{"size":2743,"mtime":1608182015210,"results":"71","hashOfConfig":"41"},{"size":4566,"mtime":1608306898104,"results":"72","hashOfConfig":"41"},{"size":912,"mtime":1608251888080,"results":"73","hashOfConfig":"41"},{"size":238,"mtime":1608305233090,"results":"74","hashOfConfig":"41"},{"size":2413,"mtime":1608349211900,"results":"75","hashOfConfig":"41"},{"size":432,"mtime":1608339193959,"results":"76","hashOfConfig":"41"},{"size":5114,"mtime":1608395263542,"results":"77","hashOfConfig":"41"},{"size":167,"mtime":1608350580004,"results":"78","hashOfConfig":"41"},{"size":366,"mtime":1608575714843,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"45b181",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\React\\zaglushka\\src\\components\\Logo\\index.jsx",[],["175","176"],"E:\\React\\zaglushka\\src\\index.js",[],"E:\\React\\zaglushka\\src\\components\\Header\\index.jsx",["177"],"E:\\React\\zaglushka\\src\\App.jsx",["178"],"// React\nimport { Route } from \"react-router\";\nimport { useEffect } from \"react\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  getUsers,\n  getUser,\n  loginCache,\n  getLastFeedback,\n  getAllFeedbacks,\n  getServices,\n} from \"./redux/reducer\";\n\n// Components\n// -> my\nimport Profile from \"./screen/Profile\";\nimport Feedback from \"./screen/Feedback\";\nimport Rules from \"./screen/Rules\";\nimport AboutUs from \"./screen/AboutUs/AboutUs\";\nimport Home from \"./screen/Home/Home\";\nimport Login from \"./screen/Login/Login\";\nimport Volunteers from \"./screen/Volunteers/Volunteers\";\nimport Reg from \"./screen/Reg/Reg\";\n\n// Styles\nimport \"./App.scss\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport AllUsers from \"./screen/AllUsers\";\nimport AllFeedback from \"./screen/AllFeedback\";\nimport Querties from \"./screen/Querties\";\nimport Dialog from \"./screen/Dialog\";\n\nfunction App({\n  getUsers,\n  loginCache,\n\n  // feeback\n  getLastFeedback,\n  getAllFeedbacks,\n\n  getServices,\n}) {\n  useEffect(() => {\n    getServices();\n    getAllFeedbacks();\n    loginCache();\n    getUsers();\n    getLastFeedback();\n  }, [getUsers, loginCache, getLastFeedback]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <div className=\"content\">\n        <Route path=\"/querties\" exact component={Querties} />\n        <Route path=\"/querties/:id\" component={Dialog} />\n\n        <Route path=\"/admin/users\" exact component={AllUsers} />\n        <Route path=\"/admin/feedbacks\" exact component={AllFeedback} />\n        <Route path=\"/feedback\" exact component={Feedback} />\n        <Route path=\"/rules\" exact component={Rules} />\n        <Route path=\"/reg\" exact component={Reg} />\n        <Route path=\"/login\" exact component={Login} />\n\n        <Route path=\"/volunteers\" exact component={Volunteers} />\n        <Route path=\"/profile/:id\" exact component={Profile} />\n\n        <Route path=\"/about\" exact component={AboutUs} />\n        <Route path=\"/\" exact component={Home} />\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default connect((state) => ({ users: state.users }), {\n  getUsers,\n  getUser,\n  loginCache,\n\n  // feebacks\n  getLastFeedback,\n  getAllFeedbacks,\n\n  getServices,\n})(App);\n","E:\\React\\zaglushka\\src\\redux\\store.js",[],"E:\\React\\zaglushka\\src\\redux\\reducer.js",["179","180","181","182","183","184"],"import firebase from \"../config/firebase\";\r\n\r\nimport {\r\n  isValidBirthday,\r\n  isValidDocs,\r\n  isValidLenghtPass,\r\n  isValidLocation,\r\n  isValidPass,\r\n  isValidateEmail,\r\n  isValidateFullName,\r\n} from \"../helpers/validate\";\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nconst initState = {\r\n  lastFeddbacks: [],\r\n  allFeedbacks: [],\r\n\r\n  usersFilterLine: \"\",\r\n\r\n  users: [],\r\n  crid: {},\r\n  errors: {\r\n    login: [],\r\n    reg: [],\r\n  },\r\n  currentProfile: {\r\n    id: null,\r\n    info: null,\r\n  },\r\n\r\n  regForm: {\r\n    fullName: \"\",\r\n    email: \"\",\r\n    location: \"\",\r\n    birthday: \"\",\r\n    pass: \"\",\r\n    repeatPass: \"\",\r\n    images: \"\",\r\n    block: false,\r\n    role: 1,\r\n  },\r\n\r\n  credUser: {\r\n    id: null,\r\n    info: null,\r\n  },\r\n\r\n  servicesFilterLine: \"\",\r\n\r\n  services: [],\r\n\r\n  querties: [],\r\n};\r\n\r\nasync function asyncForEach(arr, callback) {\r\n  for (let i = 0; i < arr.length; i++) await callback(arr[i], i, arr);\r\n}\r\n\r\n// QUERY\r\nconst UPDATE_DOC = \"UPDATE_DOC\";\r\nconst ADD_QUERY = \"ADD_QUERY\";\r\nconst SET_QUERIES = \"SET_QUERIES\";\r\nconst GET_UPDATED_QUERY = \"GET_UPDATED_QUERY\";\r\n\r\nconst ADD_USER = \"ADD_USER\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst UPDATE_USER_INFO = \"UPDATE_USER_INFO\";\r\n\r\nconst AUTH_USER = \"AUTH_USER\";\r\nconst ADD_ERROR = \"ADD_ERROR\";\r\nconst CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nconst SET_CURRENT_PROFILE = \"SET_CURRENT_PROFILE\";\r\nconst LOGIN = \"LOGIN\";\r\nconst LOGOUT = \"LOGOUT\";\r\nconst UPDATE_PROFILE_ACTIVE = \"UPDATE_PROFILE_ACTIVE\";\r\nconst CHANGE_REG_FORM_DATA = \"CHANGE_REG_FORM_DATA\";\r\nconst SET_ALL_FEEDBACKS = \"SET_ALL_FEEDBACKS\";\r\n\r\nconst SET_SERVICES = \"SET_SERVICES\";\r\n// filter services\r\nconst SET_SERVICES_FILTER_LINE = \"SET_SERVICES_FILTER_LINE\";\r\nconst SET_SERVICE_STATUS = \"SET_SERVICE_STATUS\";\r\n\r\n// filter users\r\nconst SET_USERS_FILTER_LINE = \"SET_USERS_FILTER_LINE\";\r\n\r\n// feedbacks\r\nconst SET_LAST_FEEDBACKS = \"SET_LAST_FEEDBACKS\";\r\nconst UPDATE_FEEDBACK_STATUS = \"UPDATE_FEEDBACK_STATUS\";\r\n\r\nconst reducer = (state = initState, { type, payload }) => {\r\n  switch (type) {\r\n    // Query\r\n    case GET_UPDATED_QUERY: {\r\n      let { id, info } = payload;\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        querties: state.querties.map((q) => {\r\n          return q.id === id ? { id, ...info } : q;\r\n        }),\r\n      };\r\n    }\r\n\r\n    case UPDATE_DOC: {\r\n      let { id, doc } = payload;\r\n      debugger;\r\n\r\n      return {\r\n        ...state,\r\n        querties: state.querties.map((q) => {\r\n          return q.id === id ? { ...q, ...doc } : q;\r\n        }),\r\n      };\r\n    }\r\n\r\n    case SET_QUERIES: {\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        querties: payload,\r\n      };\r\n    }\r\n\r\n    case ADD_QUERY: {\r\n      return {\r\n        ...state,\r\n        querties: [...state.querties, payload],\r\n      };\r\n    }\r\n\r\n    case SET_USERS: {\r\n      let services = state.services;\r\n      return {\r\n        ...state,\r\n        users: payload.map((user) => {\r\n          let data = {\r\n            ...user,\r\n            info: {\r\n              ...user.info,\r\n              services: services.map((s) => {\r\n                let i = user.info.services.indexOf(s.title);\r\n\r\n                let t = i !== -1 ? { ...s, isActive: true } : s;\r\n                return t;\r\n              }),\r\n            },\r\n          };\r\n\r\n          return { ...data };\r\n        }),\r\n      };\r\n    }\r\n\r\n    case SET_SERVICES: {\r\n      return {\r\n        ...state,\r\n        services: payload,\r\n      };\r\n    }\r\n\r\n    case UPDATE_USER_INFO: {\r\n      let services = state.services;\r\n\r\n      let data = {\r\n        ...payload,\r\n        info: {\r\n          ...payload.info,\r\n          services: services.map((s) => {\r\n            let i = payload.info.services.indexOf(s.title);\r\n\r\n            let t = i !== -1 ? { ...s, isActive: true } : s;\r\n            return t;\r\n          }),\r\n        },\r\n      };\r\n\r\n      debugger;\r\n\r\n      return {\r\n        ...state,\r\n        credUser: data,\r\n        currentProfile: data,\r\n        users: state.users.map((user) => {\r\n          return user.id === data.id ? data : user;\r\n        }),\r\n      };\r\n    }\r\n\r\n    case UPDATE_FEEDBACK_STATUS: {\r\n      const { id, status } = payload;\r\n\r\n      return {\r\n        ...state,\r\n        allFeedbacks: state.allFeedbacks.map((fb) => {\r\n          if (fb.id === id) {\r\n            return {\r\n              ...fb,\r\n              info: {\r\n                ...fb.info,\r\n                isActive: status,\r\n              },\r\n            };\r\n          }\r\n          return { ...fb };\r\n        }),\r\n      };\r\n    }\r\n\r\n    case SET_ALL_FEEDBACKS: {\r\n      return { ...state, allFeedbacks: payload };\r\n    }\r\n\r\n    case SET_LAST_FEEDBACKS: {\r\n      return {\r\n        ...state,\r\n        lastFeddbacks: payload,\r\n      };\r\n    }\r\n\r\n    // filter services\r\n    case SET_SERVICE_STATUS: {\r\n      const { ids, status } = payload;\r\n\r\n      return {\r\n        ...state,\r\n        services: state.services.map(({ id }, idx) => {\r\n          const data = state.services[idx];\r\n          if (id === ids) {\r\n            return { ...data, isActive: status };\r\n          }\r\n          return { ...data };\r\n        }),\r\n      };\r\n    }\r\n\r\n    case SET_SERVICES_FILTER_LINE: {\r\n      return { ...state, servicesFilterLine: payload };\r\n    }\r\n\r\n    // filter users\r\n    case SET_USERS_FILTER_LINE: {\r\n      return { ...state, usersFilterLine: payload };\r\n    }\r\n\r\n    // reg\r\n    case CHANGE_REG_FORM_DATA: {\r\n      return {\r\n        ...state,\r\n        regForm: {\r\n          ...state.regForm,\r\n          [payload.part]: payload.value,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_USER: {\r\n      return { ...state, users: [...state.users, payload], credUser: payload };\r\n    }\r\n\r\n    case UPDATE_PROFILE_ACTIVE: {\r\n      return {\r\n        ...state,\r\n        currentProfile: {\r\n          ...state.currentProfile,\r\n          info: { ...state.currentProfile.info, active: payload.status },\r\n        },\r\n      };\r\n    }\r\n\r\n    case AUTH_USER: {\r\n      return { ...state, credUser: payload };\r\n    }\r\n\r\n    case ADD_ERROR: {\r\n      let path = payload.path;\r\n      let error = payload.error;\r\n\r\n      switch (path) {\r\n        case \"login\":\r\n          return {\r\n            ...state,\r\n            errors: {\r\n              ...state.errors,\r\n              login: [...state.errors.login, error],\r\n            },\r\n          };\r\n\r\n        case \"reg\":\r\n          return {\r\n            ...state,\r\n            errors: {\r\n              ...state.errors,\r\n              reg: [...state.errors.reg, error],\r\n            },\r\n          };\r\n\r\n        default:\r\n          return { ...state, error: \"Неизвестная ошибка\" };\r\n      }\r\n    }\r\n\r\n    case LOGOUT: {\r\n      return { ...state, credUser: {} };\r\n    }\r\n\r\n    case LOGIN: {\r\n      return { ...state, credUser: payload };\r\n    }\r\n\r\n    case SET_CURRENT_PROFILE: {\r\n      let data = {\r\n        ...payload,\r\n        info: {\r\n          ...payload.info,\r\n          services: state.services.map((s) => {\r\n            let i = payload.info.services.indexOf(s.title);\r\n\r\n            let t = i !== -1 ? { ...s, isActive: true } : s;\r\n            return t;\r\n          }),\r\n        },\r\n      };\r\n\r\n      return { ...state, currentProfile: data };\r\n    }\r\n\r\n    case CLEAR_ERRORS: {\r\n      let path = payload;\r\n\r\n      switch (path) {\r\n        case \"login\":\r\n          return {\r\n            ...state,\r\n            errors: {\r\n              ...state.errors,\r\n              login: [],\r\n            },\r\n          };\r\n\r\n        case \"reg\":\r\n          return {\r\n            ...state,\r\n            errors: {\r\n              ...state.errors,\r\n              reg: [],\r\n            },\r\n          };\r\n\r\n        default:\r\n          return { ...state };\r\n      }\r\n    }\r\n\r\n    case \"SET_BLOCK\": {\r\n      return { ...state, regForm: { ...state.regForm, block: payload } };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getServices = () => async (dispatch) => {\r\n  let data = await (await db.collection(\"settings\").doc(\"services\").get())\r\n    .data()\r\n    .values.map((val, id) => {\r\n      return {\r\n        id,\r\n        title: val,\r\n        isActive: false,\r\n      };\r\n    });\r\n  dispatch({\r\n    type: SET_SERVICES,\r\n    payload: data,\r\n  });\r\n};\r\n\r\n// QUERY\r\nexport const getUpdatedQuery = (id) => async (dispatch) => {\r\n  let doc = await (await db.collection(\"querties\").doc(id).get()).data();\r\n\r\n  dispatch(getUpdatedQueryAC(id, doc));\r\n};\r\n\r\nconst getUpdatedQueryAC = (id, info) => ({\r\n  type: GET_UPDATED_QUERY,\r\n  payload: { id, info },\r\n});\r\n\r\nexport const saveMessage = (id, text, messages) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  debugger;\r\n\r\n  let doc = await db\r\n    .collection(\"querties\")\r\n    .doc(id)\r\n    .update({\r\n      messages: [\r\n        ...messages,\r\n        {\r\n          author: getState().credUser.id,\r\n          date: new Date(),\r\n          text,\r\n        },\r\n      ],\r\n    });\r\n\r\n  let docN = await (await db.collection(\"querties\").doc(id).get()).data();\r\n\r\n  dispatch(updateDocAC(id, docN));\r\n  debugger;\r\n};\r\n\r\nconst updateDocAC = (id, doc) => ({\r\n  type: UPDATE_DOC,\r\n  payload: {\r\n    id,\r\n    doc,\r\n  },\r\n});\r\n\r\nexport const getQuery = (id) => async (dispatch) => {\r\n  let docs = await (\r\n    await db.collection(\"querties\").orderBy(\"date\", \"asc\").get()\r\n  ).docs;\r\n\r\n  let queries = [];\r\n\r\n  docs.forEach((doc) => {\r\n    let data = doc.data();\r\n    if (data.author1 === id || data.author2 === id) {\r\n      queries.push({ ...data, id: doc.id });\r\n    }\r\n  });\r\n  dispatch(getQueriesAC(queries));\r\n};\r\n\r\nconst getQueriesAC = (queries) => ({\r\n  type: SET_QUERIES,\r\n  payload: queries,\r\n});\r\n\r\nexport const addQuery = (profileId, credId) => async (dispatch) => {\r\n  let doc = await db.collection(\"querties\").doc();\r\n\r\n  let data = {\r\n    author1: profileId,\r\n    author2: credId,\r\n    messages: [],\r\n    progress: \"wait comfirm\",\r\n    date: new Date(),\r\n  };\r\n\r\n  await doc.set(data);\r\n\r\n  let newDate = await (\r\n    await db.collection(\"querties\").doc(doc.id).get()\r\n  ).data();\r\n  dispatch(\r\n    addQueryAC({\r\n      ...newDate,\r\n      id: doc.id,\r\n    })\r\n  );\r\n\r\n  // let newData = await (await db.collection(\"users\").doc(id).get()).data();\r\n  // dispatch(updateUserInfoAC(id, newData));\r\n};\r\n\r\nconst addQueryAC = (query) => ({\r\n  type: ADD_QUERY,\r\n  payload: query,\r\n});\r\n\r\nexport const updateUserInfo = (id, newInfo) => async (dispatch) => {\r\n  let data = await db\r\n    .collection(\"users\")\r\n    .doc(id)\r\n    .update({ ...newInfo });\r\n\r\n  let newData = await (await db.collection(\"users\").doc(id).get()).data();\r\n  dispatch(updateUserInfoAC(id, newData));\r\n};\r\n\r\nconst updateUserInfoAC = (id, info) => ({\r\n  type: UPDATE_USER_INFO,\r\n  payload: { id, info },\r\n});\r\n\r\nexport const updateFeedbackStatus = (id, status) => async (dispatch) => {\r\n  await db.collection(\"feedbacks\").doc(id).update({\r\n    isActive: status,\r\n  });\r\n\r\n  dispatch(updateFeedbackStatusAC(id, status));\r\n};\r\n\r\nconst updateFeedbackStatusAC = (id, status) => ({\r\n  type: UPDATE_FEEDBACK_STATUS,\r\n  payload: { id, status },\r\n});\r\n\r\nexport const getAllFeedbacks = () => async (dispatch) => {\r\n  let data = await db.collection(\"feedbacks\").orderBy(\"date\", \"desc\").get();\r\n  let feedbacks = [];\r\n\r\n  data.forEach((doc) => {\r\n    feedbacks.push({\r\n      id: doc.id,\r\n      info: doc.data(),\r\n    });\r\n  });\r\n\r\n  dispatch(getAllFeedbacksAC(feedbacks));\r\n};\r\n\r\nconst getAllFeedbacksAC = (feedbacks) => ({\r\n  type: SET_ALL_FEEDBACKS,\r\n  payload: feedbacks,\r\n});\r\n\r\n// feedback last\r\nexport const addFeedback = (rate, text) => async (dispatch, getState) => {\r\n  let credUser = getState().credUser;\r\n  const ref = db.collection(\"feedbacks\").doc();\r\n\r\n  const newFeeback = {\r\n    text,\r\n    rate,\r\n    userId: credUser.id,\r\n    userName: credUser.info.fullName,\r\n    date: new Date(),\r\n    isActive: false,\r\n  };\r\n\r\n  await ref.set(newFeeback);\r\n};\r\n\r\nexport const getLastFeedback = () => async (dispatch) => {\r\n  let last = [],\r\n    i = 0;\r\n\r\n  let data = await db.collection(\"feedbacks\").orderBy(\"date\", \"desc\").get();\r\n\r\n  while (last.length < 3 && data.docs.length > i) {\r\n    let doc = data.docs[i].data();\r\n\r\n    if (doc.isActive) {\r\n      last.push(doc);\r\n    }\r\n    i++;\r\n  }\r\n\r\n  dispatch(getLastFeedbacksAC(last));\r\n};\r\n\r\nconst getLastFeedbacksAC = (feedbacks) => ({\r\n  type: SET_LAST_FEEDBACKS,\r\n  payload: feedbacks,\r\n});\r\n\r\n// filter services\r\nexport const changeServiceStatus = (id, status) => async (dispatch) => {\r\n  dispatch(changeServiceStatusAC(id, status));\r\n};\r\n\r\nconst changeServiceStatusAC = (ids, status) => ({\r\n  type: SET_SERVICE_STATUS,\r\n  payload: { ids, status },\r\n});\r\n\r\nexport const changeServicesFilterLine = (value) => async (dispatch) => {\r\n  dispatch(changeServicesFilterLineAC(value));\r\n};\r\nconst changeServicesFilterLineAC = (value) => ({\r\n  type: SET_SERVICES_FILTER_LINE,\r\n  payload: value,\r\n});\r\n\r\n// fiter users\r\nexport const changeUsersFilterLine = (value) => async (dispatch) => {\r\n  dispatch(changeUsersFilterLineAC(value));\r\n};\r\nconst changeUsersFilterLineAC = (value) => ({\r\n  type: SET_USERS_FILTER_LINE,\r\n  payload: value,\r\n});\r\n\r\nexport const changeRegFormData = (part, value) => async (dispatch) => {\r\n  dispatch(changeRegFormDataAC(part, value));\r\n};\r\n\r\nconst changeRegFormDataAC = (part, value) => ({\r\n  type: CHANGE_REG_FORM_DATA,\r\n  payload: { part, value },\r\n});\r\n\r\nexport const getUsers = () => async (dispatch, getState) => {\r\n  let services = getState().services;\r\n\r\n  let ref = await db.collection(\"users\");\r\n  let data = await ref.get();\r\n\r\n  let users = [];\r\n\r\n  data.forEach((doc) => {\r\n    users.push({\r\n      id: doc.id,\r\n      info: doc.data(),\r\n    });\r\n  });\r\n\r\n  dispatch(setUsersAC(users));\r\n};\r\n\r\nexport const loginCache = () => async (dispatch) => {\r\n  let req = JSON.parse(localStorage.getItem(\"userHands\"));\r\n\r\n  let id = (req && req.id) || null;\r\n\r\n  id && dispatch(getQuery(id));\r\n\r\n  let data = id ? await dispatch(getUser(id)) : {};\r\n  dispatch(loginAC(data));\r\n};\r\n\r\nconst loginAC = (data) => {\r\n  return {\r\n    type: LOGIN,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  let ref = await db.collection(\"users\").doc(id);\r\n  let data = await ref.get();\r\n\r\n  let user = {\r\n    id: data.id,\r\n    info: data.data(),\r\n  };\r\n\r\n  dispatch(setCurrentProfileAC(user));\r\n\r\n  return user;\r\n};\r\n\r\nexport const clearErrorsReg = () => (dispatch) => {\r\n  dispatch(clearErrorsAC(\"reg\"));\r\n};\r\n\r\nexport const setAcctiveAccount = (id, status) => async (dispatch) => {\r\n  let ref = await db\r\n    .collection(\"users\")\r\n    .doc(id)\r\n    .update({\r\n      active: status === 1 ? 0 : 1,\r\n    });\r\n\r\n  dispatch(updateProfileActiveAC(id, !status));\r\n  dispatch(getUsers());\r\n};\r\n\r\nconst updateProfileActiveAC = (id, status) => ({\r\n  type: UPDATE_PROFILE_ACTIVE,\r\n  payload: { id, status },\r\n});\r\n\r\nconst setCurrentProfileAC = (user) => ({\r\n  type: SET_CURRENT_PROFILE,\r\n  payload: user,\r\n});\r\n\r\nexport const addUser = ({\r\n  fullName,\r\n  active,\r\n  avatar,\r\n  birthday,\r\n  docs,\r\n  email,\r\n  location,\r\n  pass,\r\n  role,\r\n  services = [],\r\n}) => async (dispatch) => {\r\n  if (await dispatch(isValidateReg())) {\r\n    const docsURL = [];\r\n\r\n    let i = 0;\r\n\r\n    while (i < docs.length) {\r\n      const d = docs[i];\r\n\r\n      const uploadTask = storage\r\n        .ref()\r\n        .child(`users/${email}/${d.file.name}`)\r\n        .put(d.file);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (s) => {},\r\n        (e) => {\r\n          console.log(e);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`users/${email}`)\r\n            .child(d.file.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              docsURL.push(url);\r\n            });\r\n        }\r\n      );\r\n      i++;\r\n    }\r\n\r\n    let inte = setInterval(async () => {\r\n      console.log(docs.length === 0 && role === 2);\r\n      if (docsURL[docs.length - 1] || (docs.length === 0 && role === 2)) {\r\n        clearInterval(inte);\r\n        const ref = db.collection(\"users\").doc();\r\n\r\n        const userInfo2 = {\r\n          fullName: fullName,\r\n          active: 0,\r\n          avatar: null,\r\n          birthday: birthday,\r\n          email: email,\r\n          docsURL,\r\n          location: location,\r\n          pass: pass,\r\n          role: role,\r\n          services: services,\r\n        };\r\n\r\n        await ref.set(userInfo2);\r\n        dispatch(addUserAC(userInfo2));\r\n      }\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userHands\");\r\n\r\n  dispatch(logoutAC());\r\n};\r\n\r\nexport const isValidateReg = () => async (dispatch, getState) => {\r\n  const {\r\n    fullName,\r\n    email,\r\n    location,\r\n    birthday,\r\n    pass,\r\n    repeatPass,\r\n    role,\r\n    images,\r\n  } = getState().regForm;\r\n\r\n  dispatch(clearErrorsReg());\r\n\r\n  let isFullName = isValidateFullName(fullName);\r\n  if (!isFullName) {\r\n    dispatch(\r\n      addErrorReg(\"Фамилия, имя или отчество невалидно (мин. длинна 2)\")\r\n    );\r\n  }\r\n\r\n  let isEmail = isValidateEmail(email);\r\n  if (!isEmail) {\r\n    dispatch(addErrorReg(\"Невалидная почта\"));\r\n  }\r\n\r\n  let emailIsFree = await dispatch(checkUnicEmail(email));\r\n  if (!emailIsFree) {\r\n    dispatch(addErrorReg(\"Данная почта занята\"));\r\n  }\r\n\r\n  let isLocation = isValidLocation(location);\r\n  if (!isLocation) {\r\n    dispatch(addErrorReg(\"Невалидное местоположение\"));\r\n  }\r\n\r\n  let isBirthday = isValidBirthday(birthday);\r\n  if (!isBirthday) {\r\n    dispatch(addErrorReg(\"Невалидная дата рождения\"));\r\n  }\r\n\r\n  let isPass = isValidPass(pass, repeatPass);\r\n  if (!isPass) {\r\n    dispatch(addErrorReg(\"Пароли не совпадают\"));\r\n  }\r\n\r\n  let isLenghtPass = isValidLenghtPass(pass);\r\n  if (!isLenghtPass) {\r\n    dispatch(addErrorReg(\"Мин. длинна пароля - 8\"));\r\n  }\r\n\r\n  let isDocs = isValidDocs(role, images);\r\n  if (!isDocs) {\r\n    dispatch(addErrorReg(\"Прикрепите минимум один документ\"));\r\n  }\r\n\r\n  let evenIsValid =\r\n    isFullName &&\r\n    isEmail &&\r\n    emailIsFree &&\r\n    isLocation &&\r\n    isBirthday &&\r\n    isPass &&\r\n    isLenghtPass &&\r\n    isDocs;\r\n\r\n  dispatch({\r\n    type: \"SET_BLOCK\",\r\n    payload: true,\r\n  });\r\n  return evenIsValid;\r\n};\r\n\r\nconst logoutAC = () => ({\r\n  type: LOGOUT,\r\n});\r\n\r\nexport const checkUnicEmail = (email) => async (dispatch) => {\r\n  let data = await db.collection(\"users\").get();\r\n\r\n  let users = [];\r\n\r\n  data.forEach((doc) => {\r\n    let user = doc.data();\r\n    if (doc.data().email === email) {\r\n      users.push(1);\r\n    }\r\n  });\r\n\r\n  return users.length === 0;\r\n};\r\n\r\nexport const addErrorReg = (err) => (dispatch) =>\r\n  dispatch(addErrorAC(\"reg\", err));\r\n\r\nexport const loginUser = ({ email, pass }) => async (dispatch) => {\r\n  const usersRef = await db.collection(\"users\");\r\n  const data = await usersRef.where(\"email\", \"==\", email).get();\r\n\r\n  if (data.empty) {\r\n    dispatch(clearErrorsAC(\"login\"));\r\n    dispatch(addErrorAC(\"login\", \"Неверный пароль или email\"));\r\n    return;\r\n  }\r\n\r\n  data.forEach((doc) => {\r\n    console.log(doc.data().pass);\r\n\r\n    if (doc.exists && pass === doc.data().pass) {\r\n      localStorage.setItem(\r\n        \"userHands\",\r\n        JSON.stringify({ id: doc.id, info: doc.data() })\r\n      );\r\n      dispatch(getQuery(doc.id));\r\n      dispatch(\r\n        authUserAC({\r\n          id: doc.id,\r\n          info: doc.data(),\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(clearErrorsAC(\"login\"));\r\n      dispatch(addErrorAC(\"login\", \"Неверный пароль или email\"));\r\n    }\r\n  });\r\n};\r\n\r\nexport const clearErrorsLogin = () => (dispatch) => {\r\n  dispatch(clearErrorsAC(\"login\"));\r\n};\r\n\r\nconst authUserAC = (data) => ({\r\n  type: AUTH_USER,\r\n  payload: data,\r\n});\r\n\r\nconst addErrorAC = (path, error) => {\r\n  return {\r\n    type: ADD_ERROR,\r\n    payload: { path, error },\r\n  };\r\n};\r\n\r\nconst clearErrorsAC = (path) => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n    payload: path,\r\n  };\r\n};\r\n\r\nconst setUsersAC = (users) => ({\r\n  type: SET_USERS,\r\n  payload: users,\r\n});\r\n\r\nconst addUserAC = (userInfo) => ({\r\n  type: ADD_USER,\r\n  payload: userInfo,\r\n});\r\n\r\nexport default reducer;\r\n","E:\\React\\zaglushka\\src\\screen\\AboutUs\\AboutUs.jsx",["185"],"// React\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Components\r\n// -> my\r\nimport Header from \"../../components/Header\";\r\n\r\n// Styles\r\nimport s from \"./AboutUs.module.scss\";\r\n\r\nfunction AboutUs({ credUser, logout }) {\r\n  return (\r\n    <>\r\n      <div className={s.aboutUs}>\r\n        <div className={s.title}>\r\n          Побдробнее о сервисе патронажных услуг \"Добрые руки\"\r\n        </div>\r\n\r\n        <div className={s.text}>\r\n          <div className={s.t}>\r\n            <div>\r\n              Давно выяснено, что при оценке дизайна и композиции читаемый текст\r\n              мешает сосредоточиться. Lorem Ipsum используют потому, что тот\r\n              обеспечивает более или менее стандартное заполнение шаблона, а\r\n              также реальное распределение букв и пробелов в абзацах, которое не\r\n              получается при простой дубликации \"Здесь ваш текст.. Здесь ваш\r\n              текст..\r\n            </div>\r\n            <div>\r\n              Здесь ваш текст..\" Многие программы электронной вёрстки и\r\n              редакторы HTML используют Lorem Ipsum в качестве текста по\r\n              умолчанию, так что поиск по ключевым словам \"lorem ipsum\" сразу\r\n              показывает, как много веб-страниц всё ещё дожидаются своего\r\n              настоящего рождения. За прошедшие годы текст Lorem Ipsum получил\r\n              много версий. Некоторые версии появились по ошибке, некоторые -\r\n              намеренно (например, юмористические варианты).\r\n            </div>\r\n            <div>\r\n              Здесь ваш текст..\" Многие программы электронной вёрстки и\r\n              редакторы\r\n            </div>\r\n          </div>\r\n          <div className={s.t}>\r\n            <div>\r\n              Здесь ваш текст..\" Многие программы электронной вёрстки и\r\n              редакторы HTML используют Lorem Ipsum в качестве текста по\r\n              умолчанию, так что поиск по ключевым словам \"lorem ipsum\" сразу\r\n              показывает, как много веб-страниц всё ещё дожидаются своего\r\n              настоящего рождения. За прошедшие годы текст Lorem Ipsum получил\r\n              много версий. Некоторые версии появились по ошибке, некоторые -\r\n              намеренно (например, юмористические варианты).\r\n            </div>\r\n            <div>\r\n              Давно выяснено, что при оценке дизайна и композиции читаемый текст\r\n              мешает сосредоточиться. Lorem Ipsum используют потому, что тот\r\n              обеспечивает более или менее стандартное заполнение шаблона, а\r\n              также реальное распределение букв и пробелов в абзацах, которое не\r\n              получается при простой дубликации \"Здесь ваш текст.. Здесь ваш\r\n              текст..\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.buttonMore}>\r\n          <NavLink to=\"/\">На главную</NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(AboutUs);\r\n","E:\\React\\zaglushka\\src\\screen\\Home\\Home.jsx",["186"],"// React\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Components\r\n// -> my\r\nimport Header from \"../../components/Header\";\r\n\r\n// Styles\r\nimport s from \"./Home.module.scss\";\r\n\r\n// Images\r\nimport volunteers from \"./../../accets/images/1-1.jpg\";\r\nimport marker from \"../../accets/check.svg\";\r\n\r\nconst ListItem = ({ text }) => {\r\n  return (\r\n    <div className={s.listItem}>\r\n      <div className={s.marker}>\r\n        <img src={marker} alt=\"маркер\" />\r\n      </div>\r\n      <div className={s.itemText}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <div className={s.home}>\r\n        <div className={s.text}>\r\n          <div className={s.info}>\r\n            <div className={s.image}>\r\n              <img src={volunteers} alt=\"Волонтёры\" />\r\n            </div>\r\n            <div className={s.more}>\r\n              <div className={s.title}>Добрые руки - это...</div>\r\n\r\n              <div className={s.list}>\r\n                <ListItem text=\"бесплатный сервис,\" />\r\n                <ListItem text=\"для пожилых людей, маломобильных граждан, инвалидов,\" />\r\n                <ListItem\r\n                  text=\"для волонтёров, медицинских работников и просто\r\n                    неравнодушных,\"\r\n                />\r\n                <ListItem\r\n                  text=\"объединяющий людей, нуждающихся в патронажных услугах, с\r\n                    теми, кто может их оказать.\"\r\n                />\r\n                <div className={s.footnote}>\r\n                  * – патронажные услуги: проведение медицинских процедур,\r\n                  сопровождение при посещении медицинских учреждений,\r\n                  осуществление гигиенических мероприятий, помощь\r\n                  хозяйственно-бытового характера, контроль за своевременным\r\n                  приемом назначенных лекарств\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.buttonsRL}>\r\n          <div className={s.r}>\r\n            <NavLink to=\"/login\">Войти</NavLink>\r\n          </div>\r\n          <div className={s.l}>\r\n            <NavLink to=\"/reg\">Регистрация</NavLink>\r\n          </div>\r\n        </div>\r\n        <div className={s.buttonMore}>\r\n          <NavLink to=\"/about\">Подробная информация</NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(Home);\r\n","E:\\React\\zaglushka\\src\\screen\\Volunteers\\Volunteers.jsx",["187"],"// React\r\nimport React from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  logout,\r\n  changeServicesFilterLine,\r\n  changeServiceStatus,\r\n  changeUsersFilterLine,\r\n} from \"../../redux/reducer\";\r\n\r\n// Components\r\n// -> my\r\nimport Empty from \"./Empty\";\r\nimport CardVolunteer from \"../../components/CardVolunteer\";\r\nimport Header from \"../../components/Header\";\r\nimport Checkbox from \"../../components/Checkbox\";\r\n\r\n// Styles\r\nimport s from \"./Volunteers.module.scss\";\r\n\r\n// Images\r\nimport search from \"../../accets/search.svg\";\r\nimport isFitRec from \"../../helpers/isFetRec\";\r\n\r\nfunction Volunteers({\r\n  // filter services\r\n  changeServicesFilterLine,\r\n  changeServiceStatus,\r\n  servicesFilterLine,\r\n  services,\r\n\r\n  // filter users\r\n  changeUsersFilterLine,\r\n  usersFilterLine,\r\n\r\n  users,\r\n  credUser,\r\n  logout,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className={s.volunteers}>\r\n        <div className={s.filter}>\r\n          <div className={s.searchWrp}>\r\n            <div className={s.search}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Поиск услуги\"\r\n                value={servicesFilterLine}\r\n                onChange={({ target }) =>\r\n                  changeServicesFilterLine(target.value)\r\n                }\r\n              />\r\n              <img src={search} alt=\"\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.list}>\r\n            {services.map(({ title, id, isActive }) => {\r\n              return (\r\n                <Checkbox\r\n                  text={title}\r\n                  isChecked={isActive}\r\n                  onChange={() => changeServiceStatus(id, !isActive)}\r\n                  color=\"#fff\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={s.r}>\r\n          <div className={s.search}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Поиск по имени\"\r\n              value={usersFilterLine}\r\n              onChange={({ target }) => changeUsersFilterLine(target.value)}\r\n            />\r\n            <img src={search} alt=\"\" />\r\n          </div>\r\n\r\n          {users.filter(({ info }) => {\r\n            return isFitRec(\r\n              info.services,\r\n              services.filter((s) => s.isActive)\r\n            );\r\n          }).length > 0 &&\r\n          users.filter(({ info }) => {\r\n            return (\r\n              info.fullName\r\n                .toLowerCase()\r\n                .indexOf(usersFilterLine.toLowerCase()) !== -1 ||\r\n              usersFilterLine === \"\"\r\n            );\r\n          }).length > 0 ? (\r\n            <>\r\n              <div className={s.pag}>\r\n                <div className={s.pag_item}>1</div>\r\n                <div className={s.pag_item}>2</div>\r\n                <div className={s.pag_item}>3</div>\r\n                <div className={s.pag_item}>...</div>\r\n                <div className={s.pag_item}>11</div>\r\n              </div>\r\n              <div className={s.users}>\r\n                {users\r\n                  .filter(({ info }) => {\r\n                    return isFitRec(\r\n                      info.services,\r\n                      services.filter((s) => s.isActive)\r\n                    );\r\n                  })\r\n                  .filter(({ info }) => {\r\n                    debugger;\r\n                    let a =\r\n                      info.fullName\r\n                        .toLowerCase()\r\n                        .indexOf(usersFilterLine.toLowerCase()) !== -1;\r\n                    return a || usersFilterLine === \"\";\r\n                  })\r\n                  .map(({ id, info }) => {\r\n                    return <CardVolunteer id={id} info={info} />;\r\n                  })}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return {\r\n      // filter\r\n      servicesFilterLine: state.servicesFilterLine,\r\n      services: state.services.filter((s) => {\r\n        let a = s.title\r\n          .toLowerCase()\r\n          .indexOf(state.servicesFilterLine.toLowerCase());\r\n        return a !== -1;\r\n      }),\r\n\r\n      credUser: state.credUser,\r\n\r\n      usersFilterLine: state.usersFilterLine,\r\n      users:\r\n        state.users.length > 0\r\n          ? state.users\r\n              .filter((user) => {\r\n                return user.info.role === 1;\r\n              })\r\n              .filter((user) => {\r\n                return user.info.active === 1;\r\n              })\r\n          : [],\r\n    };\r\n  },\r\n  {\r\n    logout,\r\n\r\n    // filter services\r\n    changeServicesFilterLine,\r\n    changeServiceStatus,\r\n\r\n    // fiter users\r\n    changeUsersFilterLine,\r\n  }\r\n)(Volunteers);\r\n","E:\\React\\zaglushka\\src\\screen\\Login\\Login.jsx",["188","189"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport { loginUser, clearErrorsLogin, saveMessage } from \"../../redux/reducer\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport s from \"./Login.module.scss\";\r\n\r\nfunction Login({ loginUser, clearErrorsLogin, errors, credUser, saveMessage }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  const onLogin = () => {\r\n    let userInfo = {\r\n      email,\r\n      pass,\r\n    };\r\n    loginUser(userInfo);\r\n  };\r\n\r\n  if (credUser.id) {\r\n    return <Redirect to={`/profile/${credUser.id}`} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.login}>\r\n        <div className={s.wrp}>\r\n          <div className={s.title}>Вход</div>\r\n          <div className={s.form}>\r\n            <input\r\n              type=\"text\"\r\n              className={s.mail}\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                clearErrorsLogin();\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className={s.password}\r\n              placeholder=\"Пароль\"\r\n              value={pass}\r\n              onChange={(e) => {\r\n                clearErrorsLogin();\r\n                setPass(e.target.value);\r\n              }}\r\n            />\r\n\r\n            {errors && (\r\n              <div className={s.errors}>\r\n                {errors.map((err) => (\r\n                  <div className={s.err}>{err}</div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className={s.btn} onClick={onLogin}>\r\n              Войти\r\n            </div>\r\n            <NavLink to=\"/reg\" className={s.create}>\r\n              У меня нет аккаунта\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    errors: state.errors.login,\r\n    credUser: state.credUser,\r\n  }),\r\n  {\r\n    loginUser,\r\n    clearErrorsLogin,\r\n    saveMessage,\r\n  }\r\n)(Login);\r\n","E:\\React\\zaglushka\\src\\screen\\Reg\\Reg.jsx",["190","191"],"import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport {\r\n  addUser,\r\n  checkUnicEmail,\r\n  logout,\r\n  loginCache,\r\n  addErrorReg,\r\n  clearErrorsReg,\r\n  changeRegFormData,\r\n} from \"../../redux/reducer\";\r\nimport s from \"./Reg.module.scss\";\r\n\r\nimport Uploader from \"../../components/Uploader\";\r\n\r\nfunction Login({\r\n  addUser,\r\n  credUser,\r\n  loginCache,\r\n  errors,\r\n\r\n  regForm,\r\n\r\n  changeRegFormData,\r\n}) {\r\n  const {\r\n    fullName,\r\n    email,\r\n    location,\r\n    birthday,\r\n    pass,\r\n    repeatPass,\r\n    images,\r\n    block,\r\n    role,\r\n  } = regForm;\r\n\r\n  const setFullName = (e) => {\r\n    changeRegFormData(\"fullName\", e);\r\n  };\r\n\r\n  const setEmail = (e) => {\r\n    changeRegFormData(\"email\", e);\r\n  };\r\n\r\n  const setLocation = (e) => {\r\n    changeRegFormData(\"location\", e);\r\n  };\r\n\r\n  const setBirthday = (e) => {\r\n    changeRegFormData(\"birthday\", e);\r\n  };\r\n\r\n  const setPass = (e) => {\r\n    changeRegFormData(\"pass\", e);\r\n  };\r\n\r\n  const setRepeatPass = (e) => {\r\n    changeRegFormData(\"repeatPass\", e);\r\n  };\r\n\r\n  const setImages = (e) => {\r\n    changeRegFormData(\"images\", e);\r\n  };\r\n\r\n  const setBlock = (e) => {\r\n    changeRegFormData(\"block\", e);\r\n  };\r\n\r\n  const setRole = (e) => {\r\n    changeRegFormData(\"role\", e);\r\n  };\r\n\r\n  // const [role, setRole] = useState(1);\r\n\r\n  const onReg = () => {\r\n    const userInfo = {\r\n      fullName,\r\n      email,\r\n      location,\r\n      birthday,\r\n      services: [],\r\n      docs: images,\r\n      pass,\r\n      role,\r\n      active: 0,\r\n      avatar: null,\r\n    };\r\n\r\n    addUser(userInfo);\r\n  };\r\n\r\n  if (credUser.id) {\r\n    if (!loginCache()) {\r\n      return <Redirect to={`/profile/${credUser.id}`} />;\r\n    } else {\r\n      return <Redirect to={`/login`} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {block && (\r\n        <div className={s.block}>\r\n          {errors.length ? (\r\n            <div className={s.errors}>\r\n              <div className={s.title}>Сбой</div>\r\n\r\n              {errors.map((err) => (\r\n                <div className={s.err}>{err}</div>\r\n              ))}\r\n\r\n              <div className={s.one}>\r\n                <button className={s.btn} onClick={() => setBlock(false)}>\r\n                  Вернутся назад\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={s.success}>\r\n              <div className={s.title}>Успешная регистрация</div>\r\n              <div className={s.text}>\r\n                Регистрация прошла успешно:{\" \"}\r\n                <NavLink to={\"/login\"} className={s.go}>\r\n                  войти в аккаунт\r\n                </NavLink>\r\n              </div>\r\n\r\n              <div className={s.one}>\r\n                <button className={s.btn} onClick={() => setBlock(false)}>\r\n                  Вернутся назад\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className={s.login}>\r\n        <div className={s.title}>Регистрация</div>\r\n\r\n        <div className={s.head}>\r\n          <div className={s.discription}>\r\n            {role === 1 ? (\r\n              <>\r\n                Если Вы хотите и можете оказывать патронажные услуги,\r\n                пожалуйста, заполните данную форму. Также просим Вас загрузить\r\n                документы, подтверждающие Вашу квалификацию и компетенции.\r\n              </>\r\n            ) : (\r\n              <>\r\n                Если Вы нуждаетесь в получении патронажных услуг, либо желаете\r\n                заказать их для своих близких, пожалуйста, заполните данную\r\n                форму.\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.toggle}>\r\n            <div\r\n              className={`${s.var} ${role === 1 ? s.active : s.noactive}`}\r\n              onClick={() => {\r\n                setRole(1);\r\n              }}\r\n            >\r\n              Исполнитель\r\n            </div>\r\n            <div\r\n              className={`${s.var} ${role === 2 ? s.active : s.noactive}`}\r\n              onClick={() => {\r\n                setRole(2);\r\n              }}\r\n            >\r\n              Заказчик\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`${s.wrp} ${role === 1 ? s.two : s.one}`}>\r\n          <div className={s.form}>\r\n            <input\r\n              type=\"text\"\r\n              className={s.password}\r\n              placeholder=\"ФИО\"\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className={s.mail}\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className={s.password}\r\n              placeholder=\"Местоположение (Россия, г.Пермь)\"\r\n              value={location}\r\n              onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              className={s.password}\r\n              placeholder=\"Дата рождения (01/01/2000)\"\r\n              value={birthday}\r\n              onChange={(e) => setBirthday(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              className={s.password}\r\n              placeholder=\"Пароль\"\r\n              value={pass}\r\n              onChange={(e) => setPass(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className={s.password}\r\n              placeholder=\"Повторите пароль\"\r\n              value={repeatPass}\r\n              onChange={(e) => setRepeatPass(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={s.docs}\r\n            style={{ display: role === 1 ? \"block\" : \"none\" }}\r\n          >\r\n            <Uploader images={images} setImages={setImages} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.btns}>\r\n          <div className={s.btn} onClick={onReg}>\r\n            Зарегистрироваться\r\n          </div>\r\n          <NavLink to=\"/login\" className={s.create}>\r\n            Уже есть аккаунт\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    regForm: state.regForm,\r\n    credUser: state.credUser,\r\n    errors: state.errors.reg,\r\n  }),\r\n  {\r\n    addUser,\r\n    checkUnicEmail,\r\n    logout,\r\n    loginCache,\r\n    addErrorReg,\r\n    clearErrorsReg,\r\n    changeRegFormData,\r\n  }\r\n)(Login);\r\n","E:\\React\\zaglushka\\src\\config\\firebase.js",[],"E:\\React\\zaglushka\\src\\helpers\\validate.js",["192","193","194"],"export const isValidateFullName = (fullName) => {\r\n  return (\r\n    fullName.trim().split(\" \").length === 3 &&\r\n    fullName\r\n      .trim()\r\n      .split(\" \")\r\n      .filter((n) => n.length >= 2).length === 3\r\n  );\r\n};\r\n\r\nexport const isValidateEmail = (email) => {\r\n  let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n  return reg.test(email);\r\n};\r\n\r\nexport const isValidLocation = (location) => {\r\n  return (\r\n    /^[а-яё]*$/i.test(\r\n      location.replace(\" \", \"\").replace(\".\", \"\").replace(\",\", \"\")\r\n    ) && location.length > 0\r\n  );\r\n};\r\n\r\nexport const isValidBirthday = (birthday) => {\r\n  return (\r\n    birthday.split(\"/\").length === 3 &&\r\n    !isNaN(birthday.split(\"/\")[0]) &&\r\n    birthday.split(\"/\")[0] <= 31 &&\r\n    !isNaN(birthday.split(\"/\")[1]) &&\r\n    birthday.split(\"/\")[1] <= 12 &&\r\n    !isNaN(birthday.split(\"/\")[2]) &&\r\n    birthday.split(\"/\")[2].length === 4 &&\r\n    birthday.split(\"/\")[2] <= 2020 &&\r\n    birthday.split(\"/\")[2] >= 1900\r\n  );\r\n};\r\n\r\nexport const isValidPass = (pass, repeatPass) => pass === repeatPass;\r\n\r\nexport const isValidLenghtPass = (pass) => pass.length >= 8;\r\n\r\nexport const isValidDocs = (role, images) =>\r\n  role === 1 ? images.length > 0 : true;\r\n","E:\\React\\zaglushka\\src\\screen\\Profile\\index.jsx",["195","196","197","198"],"E:\\React\\zaglushka\\src\\screen\\Feedback\\index.jsx",[],"E:\\React\\zaglushka\\src\\screen\\Rules\\index.jsx",["199"],"import React from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Components\r\nimport Header from \"../../components/Header\";\r\n\r\n// Styles\r\nimport s from \"./Rules.module.scss\";\r\n\r\nfunction Rules({ credUser, logout }) {\r\n  debugger;\r\n  return (\r\n    <>\r\n      <div className={s.dev}>\r\n        Страница условий пользования сервисом в разработке\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(Rules);\r\n","E:\\React\\zaglushka\\src\\components\\Footer\\index.jsx",[],"E:\\React\\zaglushka\\src\\helpers\\isFetRec.js",[],"E:\\React\\zaglushka\\src\\screen\\Volunteers\\Empty.jsx",[],"E:\\React\\zaglushka\\src\\helpers\\getAge.js",[],"E:\\React\\zaglushka\\src\\components\\CardVolunteer\\index.jsx",[],"E:\\React\\zaglushka\\src\\components\\Uploader\\index.jsx",[],"E:\\React\\zaglushka\\src\\components\\Checkbox\\index.jsx",["200","201"],"import React from \"react\";\r\nimport check from \"../../accets/check.svg\";\r\nimport nocheck from \"../../accets/check.png\";\r\n\r\n// styles\r\nimport s from \"./Checkbox.module.scss\";\r\n\r\nconst Checkbox = ({ isChecked, text, color, onChange }) => {\r\n  return (\r\n    <div\r\n      className={s.service}\r\n      onClick={onChange}\r\n      style={{\r\n        color,\r\n      }}\r\n    >\r\n      <div className={s.marker}>\r\n        {isChecked ? <img src={check} /> : <img src={nocheck} />}\r\n      </div>\r\n      <div className={s.text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","E:\\React\\zaglushka\\src\\components\\PhotoShower\\index.jsx",[],"E:\\React\\zaglushka\\src\\components\\Menu\\index.jsx",[],"E:\\React\\zaglushka\\src\\helpers\\formatDataFeedback.js",[],"E:\\React\\zaglushka\\src\\helpers\\formatFullNameFeedback copy.js",[],"E:\\React\\zaglushka\\src\\helpers\\getZero.js",[],"E:\\React\\zaglushka\\src\\screen\\AllUsers\\index.jsx",[],"E:\\React\\zaglushka\\src\\screen\\AllUsers\\Empty.jsx",[],"E:\\React\\zaglushka\\src\\screen\\AllFeedback\\index.jsx",["202"],"import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { updateFeedbackStatus } from \"../../redux/reducer\";\r\n\r\n// Styles\r\nimport s from \"./Feedback.module.scss\";\r\n\r\n// Images\r\nimport star_white from \"../../accets/svg/star_white.svg\";\r\nimport star_outline_white from \"../../accets/svg/star_outline_white.svg\";\r\n\r\nimport formatDataFeedback from \"../../helpers/formatDataFeedback\";\r\nimport formatFullNameFeedback from \"../../helpers/formatFullNameFeedback copy\";\r\nimport Checkbox from \"../../components/Checkbox\";\r\n\r\nconst FeedbackItem = ({ id, info, updateFeedbackStatus }) => {\r\n  const { text, date, userName, userId, rate, isActive } = info;\r\n\r\n  return (\r\n    <div className={s.feedbackItem}>\r\n      <div className={s.avatar}></div>\r\n\r\n      <div>\r\n        <div className={s.info}>\r\n          <div className={s.rate}>\r\n            {[0, 0, 0, 0, 0].map((e, idx) => {\r\n              return idx + 1 <= rate ? (\r\n                <img src={star_white} alt=\"\" />\r\n              ) : (\r\n                <img src={star_outline_white} alt=\"\" />\r\n              );\r\n            })}\r\n            <NavLink to={\"/profile/\" + userId} className={s.name}>\r\n              {formatFullNameFeedback(userName)}\r\n            </NavLink>\r\n            <div className={s.date}>\r\n              {formatDataFeedback(date.seconds * 1000)}\r\n            </div>\r\n\r\n            <div className={s.status}>\r\n              <Checkbox\r\n                isChecked={isActive}\r\n                onChange={() => updateFeedbackStatus(id, !isActive)}\r\n                text={isActive ? \"Разрешённый\" : \"Неразрешённый\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.text}>{text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Feedback({ allFeedbacks, updateFeedbackStatus, credUser }) {\r\n  if (!credUser.id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (credUser.info.role !== 80) {\r\n    return <Redirect to=\"/feedback\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.feedback}>\r\n        <div className={s.head}>\r\n          <div className={s.title}>Все отзывы</div>\r\n        </div>\r\n\r\n        <div className={s.feedbacks}>\r\n          {allFeedbacks.map((info) => {\r\n            debugger;\r\n            return (\r\n              <FeedbackItem\r\n                {...info}\r\n                updateFeedbackStatus={updateFeedbackStatus}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ allFeedbacks: state.allFeedbacks, credUser: state.credUser }),\r\n  {\r\n    updateFeedbackStatus,\r\n  }\r\n)(Feedback);\r\n","E:\\React\\zaglushka\\src\\screen\\Profile\\EditProfile\\EditProfile.jsx",[],"E:\\React\\zaglushka\\src\\screen\\Profile\\Service\\index.jsx",["203","204"],"import React from \"react\";\r\n\r\nimport s from \"../Profile.module.scss\";\r\n\r\nimport check from \"../../../accets/check.svg\";\r\nimport nocheck from \"../../../accets/check.png\";\r\n\r\nimport check_1 from \"../../../accets/check_1.svg\";\r\nimport nocheck_1 from \"../../../accets/check_1.png\";\r\n\r\nconst Service = ({ text, isChecked, color, onChecked = () => {} }) => {\r\n  let check_icon = null,\r\n    nocheck_icon = null;\r\n\r\n  if (color === 1) {\r\n    check_icon = check_1;\r\n    nocheck_icon = nocheck_1;\r\n  } else {\r\n    check_icon = check;\r\n    nocheck_icon = nocheck;\r\n  }\r\n\r\n  return (\r\n    <div className={s.service}>\r\n      <div className={s.marker}>\r\n        {isChecked ? (\r\n          <img src={check_icon} onClick={onChecked} />\r\n        ) : (\r\n          <img src={nocheck_icon} onClick={onChecked} />\r\n        )}\r\n      </div>\r\n      <div className={s.text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","E:\\React\\zaglushka\\src\\helpers\\parseRole.js",["205"],"const parseRole = (role) => {\r\n  switch (role) {\r\n    case 1:\r\n      return \"исполнитель\";\r\n    case 2:\r\n      return \"заказчик\";\r\n    case 80:\r\n      return \"модератор\";\r\n  }\r\n};\r\n\r\nexport default parseRole;\r\n","E:\\React\\zaglushka\\src\\screen\\Querties\\index.jsx",["206"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { getQuery } from \"../../redux/reducer\";\r\n\r\n// Styles\r\nimport s from \"./Querties.module.scss\";\r\nimport formatDataFeedback from \"../../helpers/formatDataFeedback\";\r\nimport formatFullNameFeedback from \"../../helpers/formatFullNameFeedback copy\";\r\nimport parseQueryStatus from \"../../helpers/parseQueryStatus\";\r\n\r\nconst QuertyItem = ({ avatar, fullName, date, progress, userId, id }) => {\r\n  return (\r\n    <div className={s.quertyItem}>\r\n      <div className={s.withAva}>\r\n        <div className={s.avatar}></div>\r\n\r\n        <div className={s.info}>\r\n          <div className={s.rate}>\r\n            <NavLink to={\"/profile/\" + userId} className={s.name}>\r\n              {formatFullNameFeedback(fullName)}\r\n            </NavLink>\r\n            <div className={s.date}>\r\n              {formatDataFeedback(date.seconds * 1000)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.text}>{parseQueryStatus(progress)}</div>\r\n      <div className={s.btn}>\r\n        <NavLink to={\"/querties/\" + id}>Открыть</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst findUserById = (users, id) => {\r\n  let r = users.filter((u) => u.id === id);\r\n  return r.lenght !== 0 ? r[0] : \"Not found\";\r\n};\r\n\r\nfunction Querties({ querties, credUser, users, getQuery }) {\r\n  if (!credUser.id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.feedback}>\r\n        <div className={s.head}>\r\n          <div className={s.title}>Запросы</div>\r\n        </div>\r\n\r\n        <div className={s.feedbacks}>\r\n          {querties.map((querty) => {\r\n            let id =\r\n              credUser.id === querty.author1 ? querty.author2 : querty.author1;\r\n            let user = findUserById(users, id);\r\n            let { avatar, fullName } = user.info;\r\n\r\n            return (\r\n              <QuertyItem\r\n                {...querty}\r\n                avatar={avatar}\r\n                userId={id}\r\n                fullName={fullName}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    credUser: state.credUser,\r\n    querties: state.querties,\r\n    users: state.users,\r\n  }),\r\n  {\r\n    getQuery,\r\n  }\r\n)(Querties);\r\n","E:\\React\\zaglushka\\src\\helpers\\parseQueryStatus.js",["207"],"const parseQueryStatus = (Status) => {\r\n  debugger;\r\n  switch (Status) {\r\n    case \"wait comfirm\":\r\n      return \"ожидание ответа\";\r\n    case \"process\":\r\n      return \"в процессе\";\r\n    case \"done\":\r\n      return \"завершен\";\r\n    case \"wait done\":\r\n      return \"ожидание завершения\";\r\n    case \"cancel\":\r\n      return \"отменён\";\r\n  }\r\n};\r\n\r\nexport default parseQueryStatus;\r\n","E:\\React\\zaglushka\\src\\screen\\Dialog\\index.jsx",["208","209"],"// React\r\nimport React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout, saveMessage, getUpdatedQuery } from \"../../redux/reducer\";\r\n\r\n// Styles\r\nimport s from \"./Dialog.module.scss\";\r\n\r\n// Images\r\nimport reload from \"../../accets/svg/reload.svg\";\r\nimport send from \"../../accets/svg/send.svg\";\r\nimport findUserById from \"../../helpers/findUserById\";\r\nimport formatFullNameFeedback from \"../../helpers/formatFullNameFeedback copy\";\r\nimport formatDataFeedback from \"../../helpers/formatDataFeedback\";\r\n\r\nconst LeftMessage = ({ text, date, authorName }) => {\r\n  return (\r\n    <div className={`${s.message} ${s.left}`}>\r\n      <div className={s.avatar}></div>\r\n      <div>\r\n        <div className={s.infoUser}>\r\n          <div className={s.fullName}>{formatFullNameFeedback(authorName)}</div>\r\n          <div className={s.date}>\r\n            {formatDataFeedback(date.seconds * 1000)}\r\n          </div>\r\n        </div>\r\n        <div className={s.text}>{text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RightMessage = ({ text, date, authorName }) => {\r\n  return (\r\n    <div className={s.ms_r_wrp}>\r\n      <div className={`${s.message} ${s.right}`}>\r\n        <div>\r\n          <div className={s.infoUser}>\r\n            <div className={s.fullName}>\r\n              {formatFullNameFeedback(authorName)}\r\n            </div>\r\n            <div className={s.date}>\r\n              {formatDataFeedback(date.seconds * 1000)}\r\n            </div>\r\n          </div>\r\n          <div className={s.text}>{text}</div>\r\n        </div>\r\n        <div className={s.avatar}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = ({ mode, ...props }) => {\r\n  return mode === \"left\" ? (\r\n    <LeftMessage {...props} />\r\n  ) : (\r\n    <RightMessage {...props} />\r\n  );\r\n};\r\n\r\nfunction Dialog({\r\n  querties,\r\n  match,\r\n  credUser,\r\n  users,\r\n  saveMessage,\r\n  getUpdatedQuery,\r\n}) {\r\n  // for head\r\n  const idDialog = match.params.id;\r\n  const info =\r\n    querties.length !== 0\r\n      ? querties.filter((q) => q.id === idDialog)[0]\r\n      : { messages: [] };\r\n\r\n  const interlocutorId =\r\n    info.author1 !== credUser.id ? info.author1 : info.author2;\r\n  let interlocutorUnfo = null;\r\n  {\r\n    interlocutorUnfo =\r\n      credUser.id && interlocutorId && findUserById(users, interlocutorId);\r\n  }\r\n\r\n  const [newMessage, setnewMessage] = useState(\"\");\r\n\r\n  if (!credUser.id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  if (info.author1 !== credUser.id && info.author2 !== credUser.id) {\r\n    return <Redirect to={\"/querties\"} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialog}>\r\n      <div className={s.head}>\r\n        <div className={s.userUnfo}>\r\n          <div className={s.avatar}></div>\r\n          <div className={s.fullName}>\r\n            {interlocutorUnfo\r\n              ? formatFullNameFeedback(interlocutorUnfo.info.fullName)\r\n              : \"Загрузка...\"}\r\n          </div>\r\n        </div>\r\n        <div className={s.status_wrp}>\r\n          <div className={s.reloader} onClick={() => getUpdatedQuery(idDialog)}>\r\n            <img src={reload} alt=\"\" />\r\n          </div>\r\n          <div>в процессе</div>\r\n        </div>\r\n\r\n        <div className={s.end}>\r\n          <NavLink to=\"/querties\">Завершить</NavLink>\r\n        </div>\r\n      </div>\r\n      <div className={s.messages_wrp}>\r\n        <div className={s.messages}>\r\n          <div className={s.ms}>\r\n            {info.messages\r\n              .sort((prev, next) => prev.date.seconds - next.date.seconds)\r\n              .reverse()\r\n              .map((m) => {\r\n                debugger;\r\n                let authorName =\r\n                  m.author === credUser.id\r\n                    ? credUser.info.fullName\r\n                    : interlocutorUnfo.info.fullName;\r\n                debugger;\r\n                return (\r\n                  <Message\r\n                    mode={\r\n                      authorName === credUser.info.fullName ? \"right\" : \"left\"\r\n                    }\r\n                    text={m.text}\r\n                    date={m.date}\r\n                    author={m.author}\r\n                    authorName={authorName}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className={s.addNewMessage}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              id=\"\"\r\n              value={newMessage}\r\n              onChange={(e) => setnewMessage(e.target.value)}\r\n            />\r\n            <img\r\n              src={send}\r\n              alt=\"\"\r\n              onClick={() => {\r\n                saveMessage(idDialog, newMessage, info.messages);\r\n                setnewMessage(\"\");\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return {\r\n      credUser: state.credUser,\r\n      querties: state.querties,\r\n      credUser: state.credUser,\r\n      users: state.users,\r\n    };\r\n  },\r\n  {\r\n    logout,\r\n    saveMessage,\r\n    getUpdatedQuery,\r\n  }\r\n)(Dialog);\r\n","E:\\React\\zaglushka\\src\\helpers\\findUserById.js",[],"E:\\React\\zaglushka\\src\\helpers\\Avatar\\index.jsx",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":23,"column":7,"nodeType":"216","messageId":"217","endLine":23,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":52,"column":6,"nodeType":"220","endLine":52,"endColumn":45,"suggestions":"221"},{"ruleId":"214","severity":1,"message":"222","line":57,"column":16,"nodeType":"216","messageId":"217","endLine":57,"endColumn":28},{"ruleId":"214","severity":1,"message":"223","line":401,"column":7,"nodeType":"216","messageId":"217","endLine":401,"endColumn":10},{"ruleId":"214","severity":1,"message":"224","line":483,"column":7,"nodeType":"216","messageId":"217","endLine":483,"endColumn":11},{"ruleId":"214","severity":1,"message":"225","line":606,"column":7,"nodeType":"216","messageId":"217","endLine":606,"endColumn":15},{"ruleId":"214","severity":1,"message":"226","line":660,"column":7,"nodeType":"216","messageId":"217","endLine":660,"endColumn":10},{"ruleId":"214","severity":1,"message":"227","line":840,"column":9,"nodeType":"216","messageId":"217","endLine":840,"endColumn":13},{"ruleId":"214","severity":1,"message":"228","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":14},{"ruleId":"214","severity":1,"message":"228","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":14},{"ruleId":"214","severity":1,"message":"228","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":14},{"ruleId":"214","severity":1,"message":"229","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"228","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"230","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"228","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":14},{"ruleId":"231","severity":1,"message":"232","line":12,"column":29,"nodeType":"233","messageId":"234","endLine":12,"endColumn":30,"suggestions":"235"},{"ruleId":"231","severity":1,"message":"236","line":12,"column":34,"nodeType":"233","messageId":"234","endLine":12,"endColumn":35,"suggestions":"237"},{"ruleId":"231","severity":1,"message":"232","line":12,"column":50,"nodeType":"233","messageId":"234","endLine":12,"endColumn":51,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":32,"column":22,"nodeType":"241","endLine":32,"endColumn":41},{"ruleId":"239","severity":1,"message":"240","line":32,"column":44,"nodeType":"241","endLine":32,"endColumn":65},{"ruleId":"218","severity":1,"message":"242","line":56,"column":6,"nodeType":"220","endLine":56,"endColumn":23,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":67,"column":5,"nodeType":"246","messageId":"247","endLine":74,"endColumn":6},{"ruleId":"214","severity":1,"message":"228","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":18,"column":22,"nodeType":"241","endLine":18,"endColumn":41},{"ruleId":"239","severity":1,"message":"240","line":18,"column":44,"nodeType":"241","endLine":18,"endColumn":65},{"ruleId":"214","severity":1,"message":"230","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":27,"column":11,"nodeType":"241","endLine":27,"endColumn":55},{"ruleId":"239","severity":1,"message":"240","line":29,"column":11,"nodeType":"241","endLine":29,"endColumn":57},{"ruleId":"244","severity":1,"message":"245","line":2,"column":3,"nodeType":"246","messageId":"247","endLine":9,"endColumn":4},{"ruleId":"214","severity":1,"message":"229","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":3,"column":3,"nodeType":"246","messageId":"247","endLine":14,"endColumn":4},{"ruleId":"248","severity":1,"message":"249","line":83,"column":3,"nodeType":"250","messageId":"251","endLine":86,"endColumn":4},{"ruleId":"252","severity":1,"message":"253","line":173,"column":7,"nodeType":"254","messageId":"255","endLine":173,"endColumn":15},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'avatar' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllFeedbacks' and 'getServices'. Either include them or remove the dependency array. If 'getServices' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["258"],"'asyncForEach' is defined but never used.","'doc' is assigned a value but never used.","'data' is assigned a value but never used.","'services' is assigned a value but never used.","'ref' is assigned a value but never used.","'user' is assigned a value but never used.","'Header' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["259","260"],"Unnecessary escape character: \\@.",["261","262"],["263","264"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["265"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-dupe-keys","Duplicate key 'credUser'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"messageId":"268","fix":"269","desc":"270"},{"messageId":"271","fix":"272","desc":"273"},{"messageId":"268","fix":"274","desc":"270"},{"messageId":"271","fix":"275","desc":"273"},{"messageId":"268","fix":"276","desc":"270"},{"messageId":"271","fix":"277","desc":"273"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [getUsers, loginCache, getLastFeedback, getServices, getAllFeedbacks]",{"range":"280","text":"281"},"removeEscape",{"range":"282","text":"283"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"284","text":"285"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"286","text":"283"},{"range":"287","text":"285"},{"range":"288","text":"283"},{"range":"289","text":"285"},"Update the dependencies array to be: [getUser, match.params.id]",{"range":"290","text":"291"},[1145,1184],"[getUsers, loginCache, getLastFeedback, getServices, getAllFeedbacks]",[294,295],"",[294,294],"\\",[299,300],[299,299],[315,316],[315,315],[1257,1274],"[getUser, match.params.id]"]