[{"E:\\React\\zaglushka\\src\\components\\Logo\\index.jsx":"1","E:\\React\\zaglushka\\src\\index.js":"2","E:\\React\\zaglushka\\src\\components\\Header\\index.jsx":"3","E:\\React\\zaglushka\\src\\App.jsx":"4","E:\\React\\zaglushka\\src\\redux\\store.js":"5","E:\\React\\zaglushka\\src\\redux\\reducer.js":"6","E:\\React\\zaglushka\\src\\screen\\AboutUs\\AboutUs.jsx":"7","E:\\React\\zaglushka\\src\\screen\\Home\\Home.jsx":"8","E:\\React\\zaglushka\\src\\screen\\Volunteers\\Volunteers.jsx":"9","E:\\React\\zaglushka\\src\\screen\\Login\\Login.jsx":"10","E:\\React\\zaglushka\\src\\screen\\Reg\\Reg.jsx":"11","E:\\React\\zaglushka\\src\\config\\firebase.js":"12","E:\\React\\zaglushka\\src\\helpers\\validate.js":"13","E:\\React\\zaglushka\\src\\screen\\Profile\\index.jsx":"14","E:\\React\\zaglushka\\src\\screen\\Feedback\\index.jsx":"15","E:\\React\\zaglushka\\src\\screen\\Rules\\index.jsx":"16","E:\\React\\zaglushka\\src\\components\\Footer\\index.jsx":"17","E:\\React\\zaglushka\\src\\helpers\\isFetRec.js":"18","E:\\React\\zaglushka\\src\\screen\\Volunteers\\Empty.jsx":"19","E:\\React\\zaglushka\\src\\helpers\\getAge.js":"20","E:\\React\\zaglushka\\src\\components\\CardVolunteer\\index.jsx":"21","E:\\React\\zaglushka\\src\\components\\Uploader\\index.jsx":"22","E:\\React\\zaglushka\\src\\components\\Checkbox\\index.jsx":"23","E:\\React\\zaglushka\\src\\components\\PhotoShower\\index.jsx":"24","E:\\React\\zaglushka\\src\\components\\Menu\\index.jsx":"25","E:\\React\\zaglushka\\src\\helpers\\formatDataFeedback.js":"26","E:\\React\\zaglushka\\src\\helpers\\formatFullNameFeedback copy.js":"27","E:\\React\\zaglushka\\src\\helpers\\getZero.js":"28","E:\\React\\zaglushka\\src\\screen\\AllUsers\\index.jsx":"29","E:\\React\\zaglushka\\src\\screen\\AllUsers\\Empty.jsx":"30","E:\\React\\zaglushka\\src\\screen\\AllFeedback\\index.jsx":"31","E:\\React\\zaglushka\\src\\screen\\Profile\\EditProfile\\EditProfile.jsx":"32","E:\\React\\zaglushka\\src\\screen\\Profile\\Service\\index.jsx":"33","E:\\React\\zaglushka\\src\\helpers\\parseRole.js":"34","E:\\React\\zaglushka\\src\\screen\\Querties\\index.jsx":"35","E:\\React\\zaglushka\\src\\helpers\\parseQueryStatus.js":"36","E:\\React\\zaglushka\\src\\screen\\Dialog\\index.jsx":"37","E:\\React\\zaglushka\\src\\helpers\\findUserById.js":"38","E:\\React\\zaglushka\\src\\helpers\\Avatar\\index.jsx":"39"},{"size":565,"mtime":1607788966900,"results":"40","hashOfConfig":"41"},{"size":368,"mtime":1607698796045,"results":"42","hashOfConfig":"41"},{"size":2213,"mtime":1608575917379,"results":"43","hashOfConfig":"41"},{"size":2416,"mtime":1608764777233,"results":"44","hashOfConfig":"41"},{"size":232,"mtime":1607542616377,"results":"45","hashOfConfig":"41"},{"size":21218,"mtime":1608769237392,"results":"46","hashOfConfig":"41"},{"size":4378,"mtime":1608001934772,"results":"47","hashOfConfig":"41"},{"size":3035,"mtime":1608009760996,"results":"48","hashOfConfig":"41"},{"size":4757,"mtime":1608177131628,"results":"49","hashOfConfig":"41"},{"size":2178,"mtime":1608351542439,"results":"50","hashOfConfig":"41"},{"size":7106,"mtime":1608182948954,"results":"51","hashOfConfig":"41"},{"size":468,"mtime":1608036006506,"results":"52","hashOfConfig":"41"},{"size":1219,"mtime":1607896429484,"results":"53","hashOfConfig":"41"},{"size":5792,"mtime":1608768438898,"results":"54","hashOfConfig":"41"},{"size":4678,"mtime":1608182359249,"results":"55","hashOfConfig":"41"},{"size":610,"mtime":1608001977860,"results":"56","hashOfConfig":"41"},{"size":208,"mtime":1608001401290,"results":"57","hashOfConfig":"41"},{"size":361,"mtime":1608306646514,"results":"58","hashOfConfig":"41"},{"size":450,"mtime":1607552376444,"results":"59","hashOfConfig":"41"},{"size":372,"mtime":1608010287239,"results":"60","hashOfConfig":"41"},{"size":1116,"mtime":1608576806518,"results":"61","hashOfConfig":"41"},{"size":2191,"mtime":1608002951875,"results":"62","hashOfConfig":"41"},{"size":573,"mtime":1607793780730,"results":"63","hashOfConfig":"41"},{"size":858,"mtime":1607674603370,"results":"64","hashOfConfig":"41"},{"size":1102,"mtime":1608339610413,"results":"65","hashOfConfig":"41"},{"size":631,"mtime":1608175900541,"results":"66","hashOfConfig":"41"},{"size":175,"mtime":1608175934071,"results":"67","hashOfConfig":"41"},{"size":73,"mtime":1608172695778,"results":"68","hashOfConfig":"41"},{"size":5045,"mtime":1608764073495,"results":"69","hashOfConfig":"41"},{"size":448,"mtime":1608176174268,"results":"70","hashOfConfig":"41"},{"size":2743,"mtime":1608182015210,"results":"71","hashOfConfig":"41"},{"size":4566,"mtime":1608306898104,"results":"72","hashOfConfig":"41"},{"size":912,"mtime":1608251888080,"results":"73","hashOfConfig":"41"},{"size":238,"mtime":1608305233090,"results":"74","hashOfConfig":"41"},{"size":2542,"mtime":1608766008216,"results":"75","hashOfConfig":"41"},{"size":294,"mtime":1608768758550,"results":"76","hashOfConfig":"41"},{"size":6960,"mtime":1608773675513,"results":"77","hashOfConfig":"41"},{"size":167,"mtime":1608350580004,"results":"78","hashOfConfig":"41"},{"size":421,"mtime":1608766127726,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"45b181",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"E:\\React\\zaglushka\\src\\components\\Logo\\index.jsx",[],["174","175"],"E:\\React\\zaglushka\\src\\index.js",[],"E:\\React\\zaglushka\\src\\components\\Header\\index.jsx",["176"],"// React\r\nimport React from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Styles\r\nimport s from \"./Heade.module.scss\";\r\n\r\n// Components\r\nimport Logo from \"../Logo\";\r\nimport MyMenu from \"../Menu\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Avatar from \"../../helpers/Avatar\";\r\n\r\nconst Header = ({ credUser, logout }) => {\r\n  const { id, info } = credUser;\r\n  let avatar = null;\r\n  let role = null;\r\n  let email = null;\r\n\r\n  if (info) {\r\n    role = info.role;\r\n    email = info.email;\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={s.header}>\r\n      <Logo />\r\n\r\n      <div className={s.r}>\r\n        <MyMenu isLogin={id} isAdmin={role === 80} />\r\n      </div>\r\n\r\n      {id && (\r\n        <div className={s.trt}>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <div className={s.userInfo} onClick={handleClick}>\r\n              <Avatar size={30} scr={\"\"} />\r\n              <div className={s.email}>{id && email}</div>\r\n            </div>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            className={s.menu}\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose} className={s.menuItem}>\r\n              <NavLink to={\"/profile/\" + id}>Мой профиль</NavLink>\r\n            </MenuItem>\r\n            <MenuItem onClick={logout} className={s.menuItem}>\r\n              <NavLink to=\"#\">Выйти</NavLink>\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(Header);\r\n","E:\\React\\zaglushka\\src\\App.jsx",[],"E:\\React\\zaglushka\\src\\redux\\store.js",[],"E:\\React\\zaglushka\\src\\redux\\reducer.js",["177","178","179","180","181","182","183"],"E:\\React\\zaglushka\\src\\screen\\AboutUs\\AboutUs.jsx",["184"],"// React\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Components\r\n// -> my\r\nimport Header from \"../../components/Header\";\r\n\r\n// Styles\r\nimport s from \"./AboutUs.module.scss\";\r\n\r\nfunction AboutUs({ credUser, logout }) {\r\n  return (\r\n    <>\r\n      <div className={s.aboutUs}>\r\n        <div className={s.title}>\r\n          Побдробнее о сервисе патронажных услуг \"Добрые руки\"\r\n        </div>\r\n\r\n        <div className={s.text}>\r\n          <div className={s.t}>\r\n            <div>\r\n              Давно выяснено, что при оценке дизайна и композиции читаемый текст\r\n              мешает сосредоточиться. Lorem Ipsum используют потому, что тот\r\n              обеспечивает более или менее стандартное заполнение шаблона, а\r\n              также реальное распределение букв и пробелов в абзацах, которое не\r\n              получается при простой дубликации \"Здесь ваш текст.. Здесь ваш\r\n              текст..\r\n            </div>\r\n            <div>\r\n              Здесь ваш текст..\" Многие программы электронной вёрстки и\r\n              редакторы HTML используют Lorem Ipsum в качестве текста по\r\n              умолчанию, так что поиск по ключевым словам \"lorem ipsum\" сразу\r\n              показывает, как много веб-страниц всё ещё дожидаются своего\r\n              настоящего рождения. За прошедшие годы текст Lorem Ipsum получил\r\n              много версий. Некоторые версии появились по ошибке, некоторые -\r\n              намеренно (например, юмористические варианты).\r\n            </div>\r\n            <div>\r\n              Здесь ваш текст..\" Многие программы электронной вёрстки и\r\n              редакторы\r\n            </div>\r\n          </div>\r\n          <div className={s.t}>\r\n            <div>\r\n              Здесь ваш текст..\" Многие программы электронной вёрстки и\r\n              редакторы HTML используют Lorem Ipsum в качестве текста по\r\n              умолчанию, так что поиск по ключевым словам \"lorem ipsum\" сразу\r\n              показывает, как много веб-страниц всё ещё дожидаются своего\r\n              настоящего рождения. За прошедшие годы текст Lorem Ipsum получил\r\n              много версий. Некоторые версии появились по ошибке, некоторые -\r\n              намеренно (например, юмористические варианты).\r\n            </div>\r\n            <div>\r\n              Давно выяснено, что при оценке дизайна и композиции читаемый текст\r\n              мешает сосредоточиться. Lorem Ipsum используют потому, что тот\r\n              обеспечивает более или менее стандартное заполнение шаблона, а\r\n              также реальное распределение букв и пробелов в абзацах, которое не\r\n              получается при простой дубликации \"Здесь ваш текст.. Здесь ваш\r\n              текст..\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.buttonMore}>\r\n          <NavLink to=\"/\">На главную</NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(AboutUs);\r\n","E:\\React\\zaglushka\\src\\screen\\Home\\Home.jsx",["185"],"// React\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Components\r\n// -> my\r\nimport Header from \"../../components/Header\";\r\n\r\n// Styles\r\nimport s from \"./Home.module.scss\";\r\n\r\n// Images\r\nimport volunteers from \"./../../accets/images/1-1.jpg\";\r\nimport marker from \"../../accets/check.svg\";\r\n\r\nconst ListItem = ({ text }) => {\r\n  return (\r\n    <div className={s.listItem}>\r\n      <div className={s.marker}>\r\n        <img src={marker} alt=\"маркер\" />\r\n      </div>\r\n      <div className={s.itemText}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <div className={s.home}>\r\n        <div className={s.text}>\r\n          <div className={s.info}>\r\n            <div className={s.image}>\r\n              <img src={volunteers} alt=\"Волонтёры\" />\r\n            </div>\r\n            <div className={s.more}>\r\n              <div className={s.title}>Добрые руки - это...</div>\r\n\r\n              <div className={s.list}>\r\n                <ListItem text=\"бесплатный сервис,\" />\r\n                <ListItem text=\"для пожилых людей, маломобильных граждан, инвалидов,\" />\r\n                <ListItem\r\n                  text=\"для волонтёров, медицинских работников и просто\r\n                    неравнодушных,\"\r\n                />\r\n                <ListItem\r\n                  text=\"объединяющий людей, нуждающихся в патронажных услугах, с\r\n                    теми, кто может их оказать.\"\r\n                />\r\n                <div className={s.footnote}>\r\n                  * – патронажные услуги: проведение медицинских процедур,\r\n                  сопровождение при посещении медицинских учреждений,\r\n                  осуществление гигиенических мероприятий, помощь\r\n                  хозяйственно-бытового характера, контроль за своевременным\r\n                  приемом назначенных лекарств\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.buttonsRL}>\r\n          <div className={s.r}>\r\n            <NavLink to=\"/login\">Войти</NavLink>\r\n          </div>\r\n          <div className={s.l}>\r\n            <NavLink to=\"/reg\">Регистрация</NavLink>\r\n          </div>\r\n        </div>\r\n        <div className={s.buttonMore}>\r\n          <NavLink to=\"/about\">Подробная информация</NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(Home);\r\n","E:\\React\\zaglushka\\src\\screen\\Volunteers\\Volunteers.jsx",["186"],"// React\r\nimport React from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  logout,\r\n  changeServicesFilterLine,\r\n  changeServiceStatus,\r\n  changeUsersFilterLine,\r\n} from \"../../redux/reducer\";\r\n\r\n// Components\r\n// -> my\r\nimport Empty from \"./Empty\";\r\nimport CardVolunteer from \"../../components/CardVolunteer\";\r\nimport Header from \"../../components/Header\";\r\nimport Checkbox from \"../../components/Checkbox\";\r\n\r\n// Styles\r\nimport s from \"./Volunteers.module.scss\";\r\n\r\n// Images\r\nimport search from \"../../accets/search.svg\";\r\nimport isFitRec from \"../../helpers/isFetRec\";\r\n\r\nfunction Volunteers({\r\n  // filter services\r\n  changeServicesFilterLine,\r\n  changeServiceStatus,\r\n  servicesFilterLine,\r\n  services,\r\n\r\n  // filter users\r\n  changeUsersFilterLine,\r\n  usersFilterLine,\r\n\r\n  users,\r\n  credUser,\r\n  logout,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className={s.volunteers}>\r\n        <div className={s.filter}>\r\n          <div className={s.searchWrp}>\r\n            <div className={s.search}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Поиск услуги\"\r\n                value={servicesFilterLine}\r\n                onChange={({ target }) =>\r\n                  changeServicesFilterLine(target.value)\r\n                }\r\n              />\r\n              <img src={search} alt=\"\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.list}>\r\n            {services.map(({ title, id, isActive }) => {\r\n              return (\r\n                <Checkbox\r\n                  text={title}\r\n                  isChecked={isActive}\r\n                  onChange={() => changeServiceStatus(id, !isActive)}\r\n                  color=\"#fff\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={s.r}>\r\n          <div className={s.search}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Поиск по имени\"\r\n              value={usersFilterLine}\r\n              onChange={({ target }) => changeUsersFilterLine(target.value)}\r\n            />\r\n            <img src={search} alt=\"\" />\r\n          </div>\r\n\r\n          {users.filter(({ info }) => {\r\n            return isFitRec(\r\n              info.services,\r\n              services.filter((s) => s.isActive)\r\n            );\r\n          }).length > 0 &&\r\n          users.filter(({ info }) => {\r\n            return (\r\n              info.fullName\r\n                .toLowerCase()\r\n                .indexOf(usersFilterLine.toLowerCase()) !== -1 ||\r\n              usersFilterLine === \"\"\r\n            );\r\n          }).length > 0 ? (\r\n            <>\r\n              <div className={s.pag}>\r\n                <div className={s.pag_item}>1</div>\r\n                <div className={s.pag_item}>2</div>\r\n                <div className={s.pag_item}>3</div>\r\n                <div className={s.pag_item}>...</div>\r\n                <div className={s.pag_item}>11</div>\r\n              </div>\r\n              <div className={s.users}>\r\n                {users\r\n                  .filter(({ info }) => {\r\n                    return isFitRec(\r\n                      info.services,\r\n                      services.filter((s) => s.isActive)\r\n                    );\r\n                  })\r\n                  .filter(({ info }) => {\r\n                    debugger;\r\n                    let a =\r\n                      info.fullName\r\n                        .toLowerCase()\r\n                        .indexOf(usersFilterLine.toLowerCase()) !== -1;\r\n                    return a || usersFilterLine === \"\";\r\n                  })\r\n                  .map(({ id, info }) => {\r\n                    return <CardVolunteer id={id} info={info} />;\r\n                  })}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return {\r\n      // filter\r\n      servicesFilterLine: state.servicesFilterLine,\r\n      services: state.services.filter((s) => {\r\n        let a = s.title\r\n          .toLowerCase()\r\n          .indexOf(state.servicesFilterLine.toLowerCase());\r\n        return a !== -1;\r\n      }),\r\n\r\n      credUser: state.credUser,\r\n\r\n      usersFilterLine: state.usersFilterLine,\r\n      users:\r\n        state.users.length > 0\r\n          ? state.users\r\n              .filter((user) => {\r\n                return user.info.role === 1;\r\n              })\r\n              .filter((user) => {\r\n                return user.info.active === 1;\r\n              })\r\n          : [],\r\n    };\r\n  },\r\n  {\r\n    logout,\r\n\r\n    // filter services\r\n    changeServicesFilterLine,\r\n    changeServiceStatus,\r\n\r\n    // fiter users\r\n    changeUsersFilterLine,\r\n  }\r\n)(Volunteers);\r\n","E:\\React\\zaglushka\\src\\screen\\Login\\Login.jsx",["187","188"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport { loginUser, clearErrorsLogin, saveMessage } from \"../../redux/reducer\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport s from \"./Login.module.scss\";\r\n\r\nfunction Login({ loginUser, clearErrorsLogin, errors, credUser, saveMessage }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  const onLogin = () => {\r\n    let userInfo = {\r\n      email,\r\n      pass,\r\n    };\r\n    loginUser(userInfo);\r\n  };\r\n\r\n  if (credUser.id) {\r\n    return <Redirect to={`/profile/${credUser.id}`} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.login}>\r\n        <div className={s.wrp}>\r\n          <div className={s.title}>Вход</div>\r\n          <div className={s.form}>\r\n            <input\r\n              type=\"text\"\r\n              className={s.mail}\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                clearErrorsLogin();\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className={s.password}\r\n              placeholder=\"Пароль\"\r\n              value={pass}\r\n              onChange={(e) => {\r\n                clearErrorsLogin();\r\n                setPass(e.target.value);\r\n              }}\r\n            />\r\n\r\n            {errors && (\r\n              <div className={s.errors}>\r\n                {errors.map((err) => (\r\n                  <div className={s.err}>{err}</div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className={s.btn} onClick={onLogin}>\r\n              Войти\r\n            </div>\r\n            <NavLink to=\"/reg\" className={s.create}>\r\n              У меня нет аккаунта\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    errors: state.errors.login,\r\n    credUser: state.credUser,\r\n  }),\r\n  {\r\n    loginUser,\r\n    clearErrorsLogin,\r\n    saveMessage,\r\n  }\r\n)(Login);\r\n","E:\\React\\zaglushka\\src\\screen\\Reg\\Reg.jsx",["189","190"],"import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport {\r\n  addUser,\r\n  checkUnicEmail,\r\n  logout,\r\n  loginCache,\r\n  addErrorReg,\r\n  clearErrorsReg,\r\n  changeRegFormData,\r\n} from \"../../redux/reducer\";\r\nimport s from \"./Reg.module.scss\";\r\n\r\nimport Uploader from \"../../components/Uploader\";\r\n\r\nfunction Login({\r\n  addUser,\r\n  credUser,\r\n  loginCache,\r\n  errors,\r\n\r\n  regForm,\r\n\r\n  changeRegFormData,\r\n}) {\r\n  const {\r\n    fullName,\r\n    email,\r\n    location,\r\n    birthday,\r\n    pass,\r\n    repeatPass,\r\n    images,\r\n    block,\r\n    role,\r\n  } = regForm;\r\n\r\n  const setFullName = (e) => {\r\n    changeRegFormData(\"fullName\", e);\r\n  };\r\n\r\n  const setEmail = (e) => {\r\n    changeRegFormData(\"email\", e);\r\n  };\r\n\r\n  const setLocation = (e) => {\r\n    changeRegFormData(\"location\", e);\r\n  };\r\n\r\n  const setBirthday = (e) => {\r\n    changeRegFormData(\"birthday\", e);\r\n  };\r\n\r\n  const setPass = (e) => {\r\n    changeRegFormData(\"pass\", e);\r\n  };\r\n\r\n  const setRepeatPass = (e) => {\r\n    changeRegFormData(\"repeatPass\", e);\r\n  };\r\n\r\n  const setImages = (e) => {\r\n    changeRegFormData(\"images\", e);\r\n  };\r\n\r\n  const setBlock = (e) => {\r\n    changeRegFormData(\"block\", e);\r\n  };\r\n\r\n  const setRole = (e) => {\r\n    changeRegFormData(\"role\", e);\r\n  };\r\n\r\n  // const [role, setRole] = useState(1);\r\n\r\n  const onReg = () => {\r\n    const userInfo = {\r\n      fullName,\r\n      email,\r\n      location,\r\n      birthday,\r\n      services: [],\r\n      docs: images,\r\n      pass,\r\n      role,\r\n      active: 0,\r\n      avatar: null,\r\n    };\r\n\r\n    addUser(userInfo);\r\n  };\r\n\r\n  if (credUser.id) {\r\n    if (!loginCache()) {\r\n      return <Redirect to={`/profile/${credUser.id}`} />;\r\n    } else {\r\n      return <Redirect to={`/login`} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {block && (\r\n        <div className={s.block}>\r\n          {errors.length ? (\r\n            <div className={s.errors}>\r\n              <div className={s.title}>Сбой</div>\r\n\r\n              {errors.map((err) => (\r\n                <div className={s.err}>{err}</div>\r\n              ))}\r\n\r\n              <div className={s.one}>\r\n                <button className={s.btn} onClick={() => setBlock(false)}>\r\n                  Вернутся назад\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={s.success}>\r\n              <div className={s.title}>Успешная регистрация</div>\r\n              <div className={s.text}>\r\n                Регистрация прошла успешно:{\" \"}\r\n                <NavLink to={\"/login\"} className={s.go}>\r\n                  войти в аккаунт\r\n                </NavLink>\r\n              </div>\r\n\r\n              <div className={s.one}>\r\n                <button className={s.btn} onClick={() => setBlock(false)}>\r\n                  Вернутся назад\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className={s.login}>\r\n        <div className={s.title}>Регистрация</div>\r\n\r\n        <div className={s.head}>\r\n          <div className={s.discription}>\r\n            {role === 1 ? (\r\n              <>\r\n                Если Вы хотите и можете оказывать патронажные услуги,\r\n                пожалуйста, заполните данную форму. Также просим Вас загрузить\r\n                документы, подтверждающие Вашу квалификацию и компетенции.\r\n              </>\r\n            ) : (\r\n              <>\r\n                Если Вы нуждаетесь в получении патронажных услуг, либо желаете\r\n                заказать их для своих близких, пожалуйста, заполните данную\r\n                форму.\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.toggle}>\r\n            <div\r\n              className={`${s.var} ${role === 1 ? s.active : s.noactive}`}\r\n              onClick={() => {\r\n                setRole(1);\r\n              }}\r\n            >\r\n              Исполнитель\r\n            </div>\r\n            <div\r\n              className={`${s.var} ${role === 2 ? s.active : s.noactive}`}\r\n              onClick={() => {\r\n                setRole(2);\r\n              }}\r\n            >\r\n              Заказчик\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`${s.wrp} ${role === 1 ? s.two : s.one}`}>\r\n          <div className={s.form}>\r\n            <input\r\n              type=\"text\"\r\n              className={s.password}\r\n              placeholder=\"ФИО\"\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className={s.mail}\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className={s.password}\r\n              placeholder=\"Местоположение (Россия, г.Пермь)\"\r\n              value={location}\r\n              onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              className={s.password}\r\n              placeholder=\"Дата рождения (01/01/2000)\"\r\n              value={birthday}\r\n              onChange={(e) => setBirthday(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              className={s.password}\r\n              placeholder=\"Пароль\"\r\n              value={pass}\r\n              onChange={(e) => setPass(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className={s.password}\r\n              placeholder=\"Повторите пароль\"\r\n              value={repeatPass}\r\n              onChange={(e) => setRepeatPass(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={s.docs}\r\n            style={{ display: role === 1 ? \"block\" : \"none\" }}\r\n          >\r\n            <Uploader images={images} setImages={setImages} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.btns}>\r\n          <div className={s.btn} onClick={onReg}>\r\n            Зарегистрироваться\r\n          </div>\r\n          <NavLink to=\"/login\" className={s.create}>\r\n            Уже есть аккаунт\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    regForm: state.regForm,\r\n    credUser: state.credUser,\r\n    errors: state.errors.reg,\r\n  }),\r\n  {\r\n    addUser,\r\n    checkUnicEmail,\r\n    logout,\r\n    loginCache,\r\n    addErrorReg,\r\n    clearErrorsReg,\r\n    changeRegFormData,\r\n  }\r\n)(Login);\r\n","E:\\React\\zaglushka\\src\\config\\firebase.js",[],"E:\\React\\zaglushka\\src\\helpers\\validate.js",["191","192","193"],"export const isValidateFullName = (fullName) => {\r\n  return (\r\n    fullName.trim().split(\" \").length === 3 &&\r\n    fullName\r\n      .trim()\r\n      .split(\" \")\r\n      .filter((n) => n.length >= 2).length === 3\r\n  );\r\n};\r\n\r\nexport const isValidateEmail = (email) => {\r\n  let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n  return reg.test(email);\r\n};\r\n\r\nexport const isValidLocation = (location) => {\r\n  return (\r\n    /^[а-яё]*$/i.test(\r\n      location.replace(\" \", \"\").replace(\".\", \"\").replace(\",\", \"\")\r\n    ) && location.length > 0\r\n  );\r\n};\r\n\r\nexport const isValidBirthday = (birthday) => {\r\n  return (\r\n    birthday.split(\"/\").length === 3 &&\r\n    !isNaN(birthday.split(\"/\")[0]) &&\r\n    birthday.split(\"/\")[0] <= 31 &&\r\n    !isNaN(birthday.split(\"/\")[1]) &&\r\n    birthday.split(\"/\")[1] <= 12 &&\r\n    !isNaN(birthday.split(\"/\")[2]) &&\r\n    birthday.split(\"/\")[2].length === 4 &&\r\n    birthday.split(\"/\")[2] <= 2020 &&\r\n    birthday.split(\"/\")[2] >= 1900\r\n  );\r\n};\r\n\r\nexport const isValidPass = (pass, repeatPass) => pass === repeatPass;\r\n\r\nexport const isValidLenghtPass = (pass) => pass.length >= 8;\r\n\r\nexport const isValidDocs = (role, images) =>\r\n  role === 1 ? images.length > 0 : true;\r\n","E:\\React\\zaglushka\\src\\screen\\Profile\\index.jsx",["194","195","196","197"],"// React\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// Reduc\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUser,\r\n  logout,\r\n  setAcctiveAccount,\r\n  updateUserInfo,\r\n\r\n  // query\r\n  addQuery,\r\n  setIsLoading,\r\n} from \"../../redux/reducer\";\r\n\r\nimport s from \"./Profile.module.scss\";\r\n\r\nimport check from \"../../accets/check.svg\";\r\nimport nocheck from \"../../accets/check.png\";\r\nimport edit from \"../../accets/svg/edit.svg\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport getAge from \"../../helpers/getAge\";\r\nimport PhotoShower from \"../../components/PhotoShower\";\r\nimport Checkbox from \"../../components/Checkbox\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport Avatar from \"../../helpers/Avatar\";\r\nconst Service = ({ text, isChecked }) => {\r\n  return (\r\n    <div className={s.service}>\r\n      <div className={s.marker}>\r\n        {isChecked ? <img src={check} /> : <img src={nocheck} />}\r\n      </div>\r\n      <div className={s.text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Profile({\r\n  match,\r\n  getUser,\r\n  profile,\r\n  logout,\r\n  credUser,\r\n  setAcctiveAccount,\r\n\r\n  updateUserInfo,\r\n\r\n  // Query\r\n  addQuery,\r\n}) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.id);\r\n  }, [match.params.id]);\r\n\r\n  if (!credUser.id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  const onChangeActiveStatus = () => {\r\n    setAcctiveAccount(profile.id, profile.info.active);\r\n  };\r\n\r\n  const parseRole = (role) => {\r\n    switch (role) {\r\n      case 1:\r\n        return \"исполнитель\";\r\n      case 2:\r\n        return \"заказчик\";\r\n      case 80:\r\n        return \"модератор\";\r\n    }\r\n  };\r\n\r\n  debugger;\r\n  return (\r\n    <>\r\n      {isEdit && (\r\n        <EditProfile\r\n          onClose={() => setIsEdit(false)}\r\n          onSave={updateUserInfo}\r\n          id={credUser.id}\r\n          {...profile.info}\r\n        />\r\n      )}\r\n      <div className={s.profile}>\r\n        <div className={s.info}>\r\n          <div className={s.name}>\r\n            <span>{profile.info ? profile.info.fullName : \"Loading...\"}</span>\r\n            {credUser.id === profile.id && (\r\n              <div className={s.edit} onClick={() => setIsEdit(true)}>\r\n                <img src={edit} alt=\"\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={s.confirm}>\r\n            {profile.info ? (\r\n              <Checkbox\r\n                isChecked={profile.info.active}\r\n                text=\"Подтверждённый аккаунт\"\r\n                color=\"#fff\"\r\n                onChange={\r\n                  credUser.info.role === 80 && profile.id !== credUser.id\r\n                    ? onChangeActiveStatus\r\n                    : () => {}\r\n                }\r\n              />\r\n            ) : (\r\n              \"Loading...\"\r\n            )}\r\n          </div>\r\n          <Avatar src={profile.info.avatar} size={210} />\r\n          <div className={s.more}>\r\n            {profile.id !== credUser.id &&\r\n              profile.info.role === 1 &&\r\n              profile.info.active === 1 &&\r\n              credUser.info.active === 1 &&\r\n              credUser.info.role === 2 && (\r\n                <div\r\n                  className={s.btn}\r\n                  onClick={() => addQuery(profile.id, credUser.id)}\r\n                >\r\n                  Отправить запрос\r\n                </div>\r\n              )}\r\n\r\n            <div className={s.email}>\r\n              Почта: {profile.info ? profile.info.email : \"Loading...\"}\r\n            </div>\r\n            <div className={s.location}>\r\n              Местоположение:{\" \"}\r\n              {profile.info ? profile.info.location : \"Loading...\"}\r\n            </div>\r\n            <div className={s.birthday}>\r\n              Дата рождения:{\" \"}\r\n              {profile.info ? profile.info.birthday : \"Loading...\"} (\r\n              {getAge(profile.info ? profile.info.birthday : \"01/01/1970\")})\r\n            </div>\r\n            <div className={s.email}>\r\n              Роль: {profile.info ? parseRole(profile.info.role) : \"Loading...\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.services}>\r\n          <div className={s.title}>Услуги:</div>\r\n          <div className={s.t}>\r\n            {profile.id &&\r\n            profile.info &&\r\n            profile.info.role === 1 &&\r\n            profile.info.services !== 0 ? (\r\n              profile.info.services.map((serv) => {\r\n                return <Service text={serv.title} isChecked={serv.isActive} />;\r\n              })\r\n            ) : (\r\n              <div className={s.email}>Данные не найдены</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={s.docs}>\r\n          {credUser.id && (\r\n            <>\r\n              <div className={s.title}>Документы:</div>\r\n\r\n              {profile.info && profile.info.docsURL.length === 0 && (\r\n                <div className={s.empty}>Данные не найдены</div>\r\n              )}\r\n              {profile.info &&\r\n              (credUser.info.role === 80 || credUser.id === profile.id) ? (\r\n                <PhotoShower images={profile.info.docsURL} />\r\n              ) : (\r\n                <div className={s.empty}>\r\n                  У вас нет доступа для просмотра данной информации\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ profile: state.currentProfile, credUser: state.credUser }),\r\n  {\r\n    getUser,\r\n    setAcctiveAccount,\r\n    logout,\r\n    updateUserInfo,\r\n\r\n    // query\r\n    addQuery,\r\n\r\n    setIsLoading,\r\n  }\r\n)(Profile);\r\n","E:\\React\\zaglushka\\src\\screen\\Feedback\\index.jsx",[],"E:\\React\\zaglushka\\src\\screen\\Rules\\index.jsx",["198"],"import React from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\n// Components\r\nimport Header from \"../../components/Header\";\r\n\r\n// Styles\r\nimport s from \"./Rules.module.scss\";\r\n\r\nfunction Rules({ credUser, logout }) {\r\n  debugger;\r\n  return (\r\n    <>\r\n      <div className={s.dev}>\r\n        Страница условий пользования сервисом в разработке\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return { credUser: state.credUser };\r\n  },\r\n  {\r\n    logout,\r\n  }\r\n)(Rules);\r\n","E:\\React\\zaglushka\\src\\components\\Footer\\index.jsx",[],"E:\\React\\zaglushka\\src\\helpers\\isFetRec.js",[],"E:\\React\\zaglushka\\src\\screen\\Volunteers\\Empty.jsx",[],"E:\\React\\zaglushka\\src\\helpers\\getAge.js",[],"E:\\React\\zaglushka\\src\\components\\CardVolunteer\\index.jsx",[],"E:\\React\\zaglushka\\src\\components\\Uploader\\index.jsx",[],"E:\\React\\zaglushka\\src\\components\\Checkbox\\index.jsx",["199","200"],"import React from \"react\";\r\nimport check from \"../../accets/check.svg\";\r\nimport nocheck from \"../../accets/check.png\";\r\n\r\n// styles\r\nimport s from \"./Checkbox.module.scss\";\r\n\r\nconst Checkbox = ({ isChecked, text, color, onChange }) => {\r\n  return (\r\n    <div\r\n      className={s.service}\r\n      onClick={onChange}\r\n      style={{\r\n        color,\r\n      }}\r\n    >\r\n      <div className={s.marker}>\r\n        {isChecked ? <img src={check} /> : <img src={nocheck} />}\r\n      </div>\r\n      <div className={s.text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","E:\\React\\zaglushka\\src\\components\\PhotoShower\\index.jsx",[],"E:\\React\\zaglushka\\src\\components\\Menu\\index.jsx",[],"E:\\React\\zaglushka\\src\\helpers\\formatDataFeedback.js",[],"E:\\React\\zaglushka\\src\\helpers\\formatFullNameFeedback copy.js",[],"E:\\React\\zaglushka\\src\\helpers\\getZero.js",[],"E:\\React\\zaglushka\\src\\screen\\AllUsers\\index.jsx",[],"E:\\React\\zaglushka\\src\\screen\\AllUsers\\Empty.jsx",[],"E:\\React\\zaglushka\\src\\screen\\AllFeedback\\index.jsx",["201"],"import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { updateFeedbackStatus } from \"../../redux/reducer\";\r\n\r\n// Styles\r\nimport s from \"./Feedback.module.scss\";\r\n\r\n// Images\r\nimport star_white from \"../../accets/svg/star_white.svg\";\r\nimport star_outline_white from \"../../accets/svg/star_outline_white.svg\";\r\n\r\nimport formatDataFeedback from \"../../helpers/formatDataFeedback\";\r\nimport formatFullNameFeedback from \"../../helpers/formatFullNameFeedback copy\";\r\nimport Checkbox from \"../../components/Checkbox\";\r\n\r\nconst FeedbackItem = ({ id, info, updateFeedbackStatus }) => {\r\n  const { text, date, userName, userId, rate, isActive } = info;\r\n\r\n  return (\r\n    <div className={s.feedbackItem}>\r\n      <div className={s.avatar}></div>\r\n\r\n      <div>\r\n        <div className={s.info}>\r\n          <div className={s.rate}>\r\n            {[0, 0, 0, 0, 0].map((e, idx) => {\r\n              return idx + 1 <= rate ? (\r\n                <img src={star_white} alt=\"\" />\r\n              ) : (\r\n                <img src={star_outline_white} alt=\"\" />\r\n              );\r\n            })}\r\n            <NavLink to={\"/profile/\" + userId} className={s.name}>\r\n              {formatFullNameFeedback(userName)}\r\n            </NavLink>\r\n            <div className={s.date}>\r\n              {formatDataFeedback(date.seconds * 1000)}\r\n            </div>\r\n\r\n            <div className={s.status}>\r\n              <Checkbox\r\n                isChecked={isActive}\r\n                onChange={() => updateFeedbackStatus(id, !isActive)}\r\n                text={isActive ? \"Разрешённый\" : \"Неразрешённый\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={s.text}>{text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Feedback({ allFeedbacks, updateFeedbackStatus, credUser }) {\r\n  if (!credUser.id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (credUser.info.role !== 80) {\r\n    return <Redirect to=\"/feedback\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.feedback}>\r\n        <div className={s.head}>\r\n          <div className={s.title}>Все отзывы</div>\r\n        </div>\r\n\r\n        <div className={s.feedbacks}>\r\n          {allFeedbacks.map((info) => {\r\n            debugger;\r\n            return (\r\n              <FeedbackItem\r\n                {...info}\r\n                updateFeedbackStatus={updateFeedbackStatus}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ allFeedbacks: state.allFeedbacks, credUser: state.credUser }),\r\n  {\r\n    updateFeedbackStatus,\r\n  }\r\n)(Feedback);\r\n","E:\\React\\zaglushka\\src\\screen\\Profile\\EditProfile\\EditProfile.jsx",[],"E:\\React\\zaglushka\\src\\screen\\Profile\\Service\\index.jsx",["202","203"],"import React from \"react\";\r\n\r\nimport s from \"../Profile.module.scss\";\r\n\r\nimport check from \"../../../accets/check.svg\";\r\nimport nocheck from \"../../../accets/check.png\";\r\n\r\nimport check_1 from \"../../../accets/check_1.svg\";\r\nimport nocheck_1 from \"../../../accets/check_1.png\";\r\n\r\nconst Service = ({ text, isChecked, color, onChecked = () => {} }) => {\r\n  let check_icon = null,\r\n    nocheck_icon = null;\r\n\r\n  if (color === 1) {\r\n    check_icon = check_1;\r\n    nocheck_icon = nocheck_1;\r\n  } else {\r\n    check_icon = check;\r\n    nocheck_icon = nocheck;\r\n  }\r\n\r\n  return (\r\n    <div className={s.service}>\r\n      <div className={s.marker}>\r\n        {isChecked ? (\r\n          <img src={check_icon} onClick={onChecked} />\r\n        ) : (\r\n          <img src={nocheck_icon} onClick={onChecked} />\r\n        )}\r\n      </div>\r\n      <div className={s.text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","E:\\React\\zaglushka\\src\\helpers\\parseRole.js",["204"],"const parseRole = (role) => {\r\n  switch (role) {\r\n    case 1:\r\n      return \"исполнитель\";\r\n    case 2:\r\n      return \"заказчик\";\r\n    case 80:\r\n      return \"модератор\";\r\n  }\r\n};\r\n\r\nexport default parseRole;\r\n","E:\\React\\zaglushka\\src\\screen\\Querties\\index.jsx",["205"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { getQuery } from \"../../redux/reducer\";\r\n\r\n// components\r\nimport Avatar from \"../../helpers/Avatar\";\r\n\r\n// Styles\r\nimport s from \"./Querties.module.scss\";\r\nimport formatDataFeedback from \"../../helpers/formatDataFeedback\";\r\nimport formatFullNameFeedback from \"../../helpers/formatFullNameFeedback copy\";\r\nimport parseQueryStatus from \"../../helpers/parseQueryStatus\";\r\n\r\nconst QuertyItem = ({ avatar, fullName, date, progress, userId, id }) => {\r\n  debugger;\r\n\r\n  return (\r\n    <div className={s.quertyItem}>\r\n      <div className={s.withAva}>\r\n        {/* <div className={s.avatar}></div> */}\r\n\r\n        <Avatar src={avatar} size={45} />\r\n\r\n        <div className={s.info}>\r\n          <div className={s.rate}>\r\n            <NavLink to={\"/profile/\" + userId} className={s.name}>\r\n              {formatFullNameFeedback(fullName)}\r\n            </NavLink>\r\n            <div className={s.date}>\r\n              {formatDataFeedback(date.seconds * 1000)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.text}>{parseQueryStatus(progress)}</div>\r\n      <div className={s.btn}>\r\n        <NavLink to={\"/querties/\" + id}>Открыть</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst findUserById = (users, id) => {\r\n  let r = users.filter((u) => u.id === id);\r\n  return r.lenght !== 0 ? r[0] : \"Not found\";\r\n};\r\n\r\nfunction Querties({ querties, credUser, users, getQuery }) {\r\n  if (!credUser.id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.feedback}>\r\n        <div className={s.head}>\r\n          <div className={s.title}>Запросы</div>\r\n        </div>\r\n\r\n        <div className={s.feedbacks}>\r\n          {querties.map((querty) => {\r\n            let id =\r\n              credUser.id === querty.author1 ? querty.author2 : querty.author1;\r\n            let user = findUserById(users, id);\r\n            let { avatar, fullName } = user.info;\r\n\r\n            return (\r\n              <QuertyItem\r\n                {...querty}\r\n                avatar={avatar}\r\n                userId={id}\r\n                fullName={fullName}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    credUser: state.credUser,\r\n    querties: state.querties,\r\n    users: state.users,\r\n  }),\r\n  {\r\n    getQuery,\r\n  }\r\n)(Querties);\r\n","E:\\React\\zaglushka\\src\\helpers\\parseQueryStatus.js",["206"],"const parseQueryStatus = (Status) => {\r\n  switch (Status) {\r\n    case \"process\":\r\n      return \"в процессе\";\r\n    case \"done\":\r\n      return \"завершен\";\r\n    case \"wait done\":\r\n      return \"ожидание завершения\";\r\n  }\r\n};\r\n\r\nexport default parseQueryStatus;\r\n","E:\\React\\zaglushka\\src\\screen\\Dialog\\index.jsx",["207","208","209"],"E:\\React\\zaglushka\\src\\helpers\\findUserById.js",[],"E:\\React\\zaglushka\\src\\helpers\\Avatar\\index.jsx",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":23,"column":7,"nodeType":"216","messageId":"217","endLine":23,"endColumn":13},{"ruleId":"214","severity":1,"message":"218","line":59,"column":16,"nodeType":"216","messageId":"217","endLine":59,"endColumn":28},{"ruleId":"214","severity":1,"message":"219","line":423,"column":7,"nodeType":"216","messageId":"217","endLine":423,"endColumn":10},{"ruleId":"214","severity":1,"message":"219","line":449,"column":7,"nodeType":"216","messageId":"217","endLine":449,"endColumn":10},{"ruleId":"214","severity":1,"message":"220","line":522,"column":7,"nodeType":"216","messageId":"217","endLine":522,"endColumn":11},{"ruleId":"214","severity":1,"message":"221","line":645,"column":7,"nodeType":"216","messageId":"217","endLine":645,"endColumn":15},{"ruleId":"214","severity":1,"message":"222","line":699,"column":7,"nodeType":"216","messageId":"217","endLine":699,"endColumn":10},{"ruleId":"214","severity":1,"message":"223","line":879,"column":9,"nodeType":"216","messageId":"217","endLine":879,"endColumn":13},{"ruleId":"214","severity":1,"message":"224","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":14},{"ruleId":"214","severity":1,"message":"224","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":14},{"ruleId":"214","severity":1,"message":"224","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"224","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"226","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"224","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":12,"column":29,"nodeType":"229","messageId":"230","endLine":12,"endColumn":30,"suggestions":"231"},{"ruleId":"227","severity":1,"message":"232","line":12,"column":34,"nodeType":"229","messageId":"230","endLine":12,"endColumn":35,"suggestions":"233"},{"ruleId":"227","severity":1,"message":"228","line":12,"column":50,"nodeType":"229","messageId":"230","endLine":12,"endColumn":51,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":22,"nodeType":"237","endLine":33,"endColumn":41},{"ruleId":"235","severity":1,"message":"236","line":33,"column":44,"nodeType":"237","endLine":33,"endColumn":65},{"ruleId":"238","severity":1,"message":"239","line":57,"column":6,"nodeType":"240","endLine":57,"endColumn":23,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":68,"column":5,"nodeType":"244","messageId":"245","endLine":75,"endColumn":6},{"ruleId":"214","severity":1,"message":"224","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":18,"column":22,"nodeType":"237","endLine":18,"endColumn":41},{"ruleId":"235","severity":1,"message":"236","line":18,"column":44,"nodeType":"237","endLine":18,"endColumn":65},{"ruleId":"214","severity":1,"message":"226","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"236","line":27,"column":11,"nodeType":"237","endLine":27,"endColumn":55},{"ruleId":"235","severity":1,"message":"236","line":29,"column":11,"nodeType":"237","endLine":29,"endColumn":57},{"ruleId":"242","severity":1,"message":"243","line":2,"column":3,"nodeType":"244","messageId":"245","endLine":9,"endColumn":4},{"ruleId":"214","severity":1,"message":"225","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":2,"column":3,"nodeType":"244","messageId":"245","endLine":9,"endColumn":4},{"ruleId":"214","severity":1,"message":"246","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":145,"column":3,"nodeType":"249","messageId":"250","endLine":148,"endColumn":4},{"ruleId":"251","severity":1,"message":"252","line":256,"column":7,"nodeType":"253","messageId":"254","endLine":256,"endColumn":15},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'avatar' is assigned a value but never used.","Identifier","unusedVar","'asyncForEach' is defined but never used.","'doc' is assigned a value but never used.","'data' is assigned a value but never used.","'services' is assigned a value but never used.","'ref' is assigned a value but never used.","'user' is assigned a value but never used.","'Header' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["257","258"],"Unnecessary escape character: \\@.",["259","260"],["261","262"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["263"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'NavLink' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-dupe-keys","Duplicate key 'credUser'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"264","fix":"265","desc":"266"},{"messageId":"267","fix":"268","desc":"269"},{"messageId":"264","fix":"270","desc":"266"},{"messageId":"267","fix":"271","desc":"269"},{"messageId":"264","fix":"272","desc":"266"},{"messageId":"267","fix":"273","desc":"269"},{"desc":"274","fix":"275"},"removeEscape",{"range":"276","text":"277"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"278","text":"279"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"280","text":"277"},{"range":"281","text":"279"},{"range":"282","text":"277"},{"range":"283","text":"279"},"Update the dependencies array to be: [getUser, match.params.id]",{"range":"284","text":"285"},[294,295],"",[294,294],"\\",[299,300],[299,299],[315,316],[315,315],[1274,1291],"[getUser, match.params.id]"]